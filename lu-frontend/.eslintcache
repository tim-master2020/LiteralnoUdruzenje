[{"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js":"1","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js":"3","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js":"4","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\UserFunctions.js":"5","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js":"6","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js":"7","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js":"8","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js":"9","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js":"10","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\alertSwal.js":"11","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js":"12","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js":"13","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\LoggedOutHomepage.js":"14","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\LoggedInHomePage.js":"15","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js":"16","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\downloadBook.js":"17","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\SidebarList.js":"18","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\SidebarStyling.js":"19","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\bookReview\\BookReview.js":"20","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\bookReview\\ReviewPage.js":"21","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\uploadPDF\\InitialUpload.js":"22","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\payment\\Payment.js":"23","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ComparePlagiats.js":"24","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DeclineExplanation.js":"25","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ReviewBookGeneral.js":"26","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DownloadBook.js":"27","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\PublishBookGeneralData.js":"28","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DecideSendingToBeta.js":"29","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\LeaveComment.js":"30","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\UploadRestOfTheWork.js":"31","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ChooseBetaReader.js":"32","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\ChooseEditors.js":"33","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\UploadUpdatedBook.js":"34","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\FileAComplaint.js":"35","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\BookReview.js":"36","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\TaskNameRoutes.js":"37","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\DownloadBooksAndLeaveNotes.js":"38","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\FindReplacement.js":"39","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\ReviewNotes.js":"40","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\RegistrationForm.js":"41"},{"size":517,"mtime":1607275862844,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1607275862846,"results":"44","hashOfConfig":"43"},{"size":688,"mtime":1609931458363,"results":"45","hashOfConfig":"43"},{"size":5748,"mtime":1611054854598,"results":"46","hashOfConfig":"43"},{"size":627,"mtime":1610726536674,"results":"47","hashOfConfig":"43"},{"size":2437,"mtime":1611432886413,"results":"48","hashOfConfig":"43"},{"size":515,"mtime":1608724261620,"results":"49","hashOfConfig":"43"},{"size":465,"mtime":1611250196721,"results":"50","hashOfConfig":"43"},{"size":50,"mtime":1607432584193,"results":"51","hashOfConfig":"43"},{"size":2123,"mtime":1611054854603,"results":"52","hashOfConfig":"43"},{"size":229,"mtime":1610726536675,"results":"53","hashOfConfig":"43"},{"size":13384,"mtime":1611430151971,"results":"54","hashOfConfig":"43"},{"size":3161,"mtime":1610726536646,"results":"55","hashOfConfig":"43"},{"size":2773,"mtime":1610726536665,"results":"56","hashOfConfig":"43"},{"size":9961,"mtime":1611054854604,"results":"57","hashOfConfig":"43"},{"size":3479,"mtime":1611430046768,"results":"58","hashOfConfig":"43"},{"size":938,"mtime":1610726536676,"results":"59","hashOfConfig":"43"},{"size":1309,"mtime":1610726536667,"results":"60","hashOfConfig":"43"},{"size":2355,"mtime":1610726536667,"results":"61","hashOfConfig":"43"},{"size":4209,"mtime":1611248301030,"results":"62","hashOfConfig":"43"},{"size":2457,"mtime":1610982836521,"results":"63","hashOfConfig":"43"},{"size":3502,"mtime":1610726536661,"results":"64","hashOfConfig":"43"},{"size":2852,"mtime":1610726536647,"results":"65","hashOfConfig":"43"},{"size":3327,"mtime":1610726523017,"results":"66","hashOfConfig":"43"},{"size":2562,"mtime":1610726523020,"results":"67","hashOfConfig":"43"},{"size":3636,"mtime":1610726523026,"results":"68","hashOfConfig":"43"},{"size":3383,"mtime":1610726523021,"results":"69","hashOfConfig":"43"},{"size":3013,"mtime":1610877788581,"results":"70","hashOfConfig":"43"},{"size":3261,"mtime":1610877788578,"results":"71","hashOfConfig":"43"},{"size":2282,"mtime":1610877788580,"results":"72","hashOfConfig":"43"},{"size":3486,"mtime":1610877788583,"results":"73","hashOfConfig":"43"},{"size":2512,"mtime":1610877788576,"results":"74","hashOfConfig":"43"},{"size":2564,"mtime":1611224560670,"results":"75","hashOfConfig":"43"},{"size":3120,"mtime":1610877788584,"results":"76","hashOfConfig":"43"},{"size":2878,"mtime":1610902951143,"results":"77","hashOfConfig":"43"},{"size":3880,"mtime":1610982836523,"results":"78","hashOfConfig":"43"},{"size":2095,"mtime":1611054854605,"results":"79","hashOfConfig":"43"},{"size":2551,"mtime":1610983795637,"results":"80","hashOfConfig":"43"},{"size":3300,"mtime":1611224550141,"results":"81","hashOfConfig":"43"},{"size":2863,"mtime":1611056018532,"results":"82","hashOfConfig":"43"},{"size":3942,"mtime":1611425600723,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"qmx00x",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"86"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"86"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"86"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js",[],["196","197"],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js",["198","199","200"],"import './App.css';\r\nimport Routes from './Routes.js';\r\nimport { Route, withRouter, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport getUser from './functions/UserFunctions';\r\n\r\nconst App = () => {\r\n  const [loggedInUser, setLoggedIn] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    getUser(setLoggedIn);\r\n}, []);\r\n\r\n//<Appbar loggedInUser = {loggedInUser} setLoggedIn= {setLoggedIn}/>\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes setLoggedIn= {setLoggedIn} loggedInUser={loggedInUser}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\UserFunctions.js",["201"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../backendConfig';\r\n\r\nexport default function getUser(setLoggedIn) {\r\n    if (localStorage.getItem('token')) {\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/auth/user`, options).then(\r\n            (resp) => {\r\n                setLoggedIn(resp.data);\r\n            },\r\n            (resp) => {\r\n                alert('error getting logged in user data');\r\n                setLoggedIn(undefined);\r\n            }\r\n        );\r\n    }\r\n}","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js",["202","203","204","205"],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js",["206","207"],"import React from 'react'\r\nimport LoginForm from '../../components/login/LoginForm';\r\nimport './LoginPage.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomePage from '../HomePage/HomePage';\r\n\r\n\r\nconst LoginPage = ({setLoggedIn,history}) => {\r\n\r\n    React.useEffect(() => {\r\n        if(localStorage.length > 0){\r\n            history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    return(!localStorage.getItem('token') && <LoginForm setLoggedIn={setLoggedIn}/>);\r\n\r\n}\r\nexport default withRouter(LoginPage);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js",["208"],"import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport RegistrationForm from '../../components/registration/RegistrationForm'\r\n\r\nconst RegistrationPage = ({history, props}) => {\r\n    \r\n    React.useEffect(() => {\r\n        if(localStorage.length > 0){\r\n            history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    return(!localStorage.getItem('token') && <RegistrationForm type={props} />)\r\n}\r\nexport default withRouter(RegistrationPage);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js",["209","210"],"import { AppBar, Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport LoggedInHomePage from './LoggedInHomePage';\r\nimport LoggedOutHomepage from './LoggedOutHomepage';\r\n\r\nconst HomePage = ({\r\n    loggedInUser,\r\n    setLoggedIn,\r\n    isInitialUpload,\r\n    isReview,\r\n    isPayment,\r\n    isReviewPreview,\r\n    publishBookGeneralData,\r\n    reviewBookGeneral,\r\n    giveExplanation,\r\n    uploadRestWork,\r\n    comparePlagiats,\r\n    downloadBook,\r\n    decideBeta, \r\n    isChooseBetaReader,\r\n    leaveComment,\r\n    uploadUpdatedBook,\r\n    editorReview,\r\n    lectorReview,\r\n    mainEditorReview,\r\n    printBook,\r\n    isFileAComplaint,\r\n    isChooseEditor,\r\n    type,\r\n    downloadAndReview,\r\n    isReviewNotes,\r\n    findReplacement}) => {\r\n    if(loggedInUser === undefined){\r\n    return (\r\n        <LoggedOutHomepage/>\r\n    );\r\n    }else if( loggedInUser !== undefined){\r\n        return(\r\n        <LoggedInHomePage \r\n            loggedInUser={loggedInUser} \r\n            setLoggedIn={setLoggedIn} \r\n            publishBookGeneralData={publishBookGeneralData}\r\n            reviewBookGeneral={reviewBookGeneral}\r\n            giveExplanation={giveExplanation}\r\n            uploadRestWork={uploadRestWork}\r\n            comparePlagiats={comparePlagiats}\r\n            downloadBook={downloadBook}\r\n            decideBeta={decideBeta}\r\n            isInitialUpload={isInitialUpload}\r\n            isReview={isReview}\r\n            isPayment={isPayment}\r\n            isReviewPreview={isReviewPreview}\r\n            isChooseBetaReader={isChooseBetaReader}\r\n            leaveComment={leaveComment}\r\n            uploadUpdatedBook={uploadUpdatedBook}\r\n            editorReview={editorReview}\r\n            lectorReview={lectorReview}\r\n            mainEditorReview={mainEditorReview}\r\n            printBook={printBook}\r\n            isFileAComplaint={isFileAComplaint}\r\n            isChooseEditor={isChooseEditor}\r\n            type={type}\r\n            downloadAndReview={downloadAndReview}\r\n            isReviewNotes={isReviewNotes}\r\n            findReplacement={findReplacement}\r\n            />);\r\n    }\r\n\r\n}\r\nexport default HomePage;","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\alertSwal.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js",["211","212","213","214","215","216","217"],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js",["218","219","220","221","222","223"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport getUser from '../../functions/UserFunctions.js';\r\nimport '../../containers/LoginReg/LoginPage.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst LoginForm = ({ history , setLoggedIn}) => {\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password,setPasword] = React.useState('');\r\n\r\n    function handleChange(evt) {\r\n        const value = evt.target.value;\r\n    }\r\n\r\n    const sendLoginRequest = (e) => {\r\n\r\n        e.preventDefault();\r\n        const fields = [];\r\n\r\n        const user = {username: username, password: password};\r\n        axios.post(`${defaultUrl}/auth/login`,user).then(\r\n            (resp) => {               \r\n                localStorage.setItem('token', resp.data.accessToken);\r\n                history.push({pathname: '/'});\r\n                getUser(setLoggedIn);\r\n        },\r\n            (resp) => {alert.fire({\r\n                text:'Invalid email or password.',\r\n            });}\r\n        );\r\n    }\r\n\r\n    return (     \r\n            <Card className=\"loginFormCard\">\r\n                <Card.Body>\r\n                    <Card.Title className=\"loginFormTitle\">Enter your creditentials</Card.Title>\r\n                    <Form onSubmit={(e) => { sendLoginRequest(e) }} className=\"loginForm\">\r\n\r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control \r\n                            id=\"username\" \r\n                            name=\"username\" \r\n                            onChange={(e) => {setUsername(e.target.value)}}\r\n                            required\r\n                            placeholder=\"Enter username\"\r\n                             />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            id=\"password\" \r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            onChange={(e) => {setPasword(e.target.value)}}\r\n                            required\r\n                            placeholder=\"Enter password\"\r\n                             />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"loginButton\">\r\n                            Login\r\n                        </Button>\r\n                        </Form.Group>\r\n                            \r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n       \r\n    );\r\n}\r\nexport default withRouter(LoginForm);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\LoggedOutHomepage.js",["224","225","226","227","228","229","230","231","232","233","234"],"import React, { useState } from \"react\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { SidebarList } from './SidebarList';\r\nimport { styling } from './SidebarStyling';\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { Carousel } from 'react-bootstrap';\r\nimport photo1 from '../../icons/photo1.svg';\r\nimport photo2 from '../../icons/photo2.svg';\r\nimport photo3 from '../../icons/photo3.svg';\r\n\r\n\r\nconst LoggedOutHomepage = ({history }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const theme = useTheme();\r\n    const useStyles = makeStyles((theme) => (styling(theme)));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={clsx(classes.appBar, { [classes.appBarShift]: isOpen })}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <div style={{ width: '100%' }}></div>\r\n                    <Button onClick={() => {history.push(`/registration`);}}>register as reader</Button>\r\n                    <Button onClick={() => {history.push(`/registration/writer`);}}>register as writer</Button>\r\n                    <Button onClick={() => {history.push(`/login`);}}>login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <MenuIcon />\r\n\r\n            <main className={clsx(classes.content, { [classes.contentShift]: isOpen })}>\r\n                <Carousel style={{heigth:'30%',width:'40%',marginLeft:'30%',marginTop:'2%'}}>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\"src={photo1} style={{height:'inherit'}}/>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\"src={photo2} style={{height:'inherit'}}/>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\"src={photo3} style={{height:'inherit'}}/>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default withRouter(LoggedOutHomepage);\r\n\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\LoggedInHomePage.js",["235"],"import React, { useState } from \"react\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport SidebarList  from './SidebarList';\r\nimport { styling } from './SidebarStyling';\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport InitialUpload from \"../../components/uploadPDF/InitialUpload\";\r\nimport BookReview from '../../components/bookReview/BookReview'\r\nimport Payment from '../../components/payment/Payment';\r\nimport ReviewPage from '../../components/bookReview/ReviewPage';\r\nimport axios from 'axios';\r\nimport PublishBookGeneralData from \"../../components/publish-book/PublishBookGeneralData\";\r\nimport ReviewBookGeneral from \"../../components/publish-book/ReviewBookGeneral\";\r\nimport DeclineExplanation from \"../../components/publish-book/DeclineExplanation\";\r\nimport UploadRestOfTheWork from \"../../components/publish-book/UploadRestOfTheWork\";\r\nimport getUser from \"../../functions/UserFunctions\";\r\nimport ComparePlagiats from \"../../components/publish-book/ComparePlagiats\";\r\nimport DownloadBook from \"../../components/publish-book/DownloadBook\"\r\nimport DecideSendingToBeta from \"../../components/publish-book/DecideSendingToBeta\"\r\nimport ChooseBetaReader from \"../../components/publish-book/ChooseBetaReader\";\r\nimport LeaveComment from \"../../components/publish-book/LeaveComment\";\r\nimport UploadUpdatedBook from \"../../components/publish-book/UploadUpdatedBook\";\r\nimport BookReviewFinal from \"../../components/publish-book/BookReview\";\r\nimport FileAComlpaint from \"../../components/plagiarism/FileAComplaint\";\r\nimport ChooseEditors from \"../../components/plagiarism/ChooseEditors\";\r\nimport DownloadBooksAndLeaveNotes from \"../../components/plagiarism/DownloadBooksAndLeaveNotes\";\r\nimport FindReplacement from \"../../components/plagiarism/FindReplacement\";\r\nimport ReviewNotes from \"../../components/plagiarism/ReviewNotes\";\r\n\r\nconst LoggedInHomepage = ({ \r\n    loggedInUser,\r\n    setLoggedIn,\r\n    history,\r\n    isInitialUpload,\r\n    isReview,\r\n    isPayment,\r\n    isReviewPreview,\r\n    publishBookGeneralData,\r\n    reviewBookGeneral,\r\n    giveExplanation,\r\n    uploadRestWork,\r\n    comparePlagiats,\r\n    downloadBook,\r\n    decideBeta, \r\n    isChooseBetaReader,\r\n    leaveComment,\r\n    uploadUpdatedBook,\r\n    editorReview,\r\n    lectorReview,\r\n    mainEditorReview,\r\n    printBook,\r\n    isFileAComplaint,\r\n    isChooseEditor,\r\n    type,\r\n    downloadAndReview,\r\n    isReviewNotes,\r\n    findReplacement}) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const theme = useTheme();\r\n    const useStyles = makeStyles((theme) => (styling(theme)));\r\n    const classes = useStyles();\r\n\r\n    const startPublishBookProcess = () => {\r\n\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/process/start-process-specific/BookPublishing`, options).then(\r\n            (resp) => {\r\n                history.push({\r\n                    pathname: '/bookGeneralData',\r\n                    state: {\r\n                      taskId: resp.data.taskId\r\n                    }\r\n                  });\r\n            },\r\n            (resp) => {\r\n                alert('fail start of process');\r\n            }\r\n        );\r\n    }\r\n\r\n    const startPlagiarsmProcess = () => {\r\n\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/process/start-process-specific/ComplainPlagiarisam`, options).then(\r\n            (resp) => {\r\n                history.push({\r\n                    pathname: '/fileAComplaint',\r\n                    state: {\r\n                      taskId: resp.data.taskId\r\n                    }\r\n                  });\r\n            },\r\n            (resp) => {\r\n                alert('fail start of process');\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateUser = () => {\r\n        getUser(setLoggedIn);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={clsx(classes.appBar, { [classes.appBarShift]: isOpen })}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton color=\"inherit\" onClick={handleDrawerToggle} edge=\"start\" className={clsx(classes.menuButton, isOpen && classes.hide)}>\r\n                        <MenuIcon style={{ color: 'black' }} />\r\n                    </IconButton>\r\n\r\n                    <div style={{ width: '100%' }}></div>\r\n                    <Button className={classes.button} onClick={() => history.push('/')}>Home</Button>\r\n                    { loggedInUser.role === 'WRITER' &&\r\n                        <div style={{ display: 'flex' }}>\r\n                            <Button className={classes.button} onClick={() => history.push('/reviews')}>Reviews</Button> \r\n                            { loggedInUser.activeAccount &&  \r\n                                <Button className={classes.button} onClick={() => { startPublishBookProcess() }} >\r\n                                    Book publishing\r\n                                </Button>\r\n                            }\r\n                            { loggedInUser.activeAccount &&  \r\n                                <Button className={classes.button} onClick={() => { startPlagiarsmProcess() }} >\r\n                                    Sumbit Plagiarsm\r\n                                </Button>\r\n                            }\r\n                            <br/>\r\n                        </div>\r\n                    }\r\n                    { loggedInUser.role === 'COMMITTEE' &&\r\n                        <Button className={classes.button} onClick={() => history.push('/review')}>Book review</Button>\r\n                    }\r\n                    <Button className={classes.button}\r\n                     onClick={() => { \r\n                            localStorage.clear(); \r\n                            history.push('/')\r\n                            setLoggedIn(undefined)}}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <MenuIcon />\r\n            <Drawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={isOpen} classes={{ paper: classes.drawerPaper }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerToggle}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {SidebarList({user: loggedInUser})}\r\n            </Drawer>\r\n            <main className={clsx(classes.content, { [classes.contentShift]: isOpen })}>\r\n                <div className={classes.drawerHeader} />\r\n                <div>\r\n                    { publishBookGeneralData &&\r\n                        <PublishBookGeneralData/>\r\n                    }{ reviewBookGeneral &&\r\n                        <ReviewBookGeneral updateUser={()=>updateUser()}/>\r\n                    }{ giveExplanation &&\r\n                        <DeclineExplanation updateUser={()=>updateUser()}/>\r\n                    }{ uploadRestWork &&\r\n                        <UploadRestOfTheWork updateUser={()=>updateUser()}/>\r\n                    }{ comparePlagiats &&\r\n                        <ComparePlagiats updateUser={()=>updateUser()}/>\r\n                    }{ downloadBook &&\r\n                        <DownloadBook updateUser={()=>updateUser()}/>\r\n                    }{ decideBeta &&\r\n                        <DecideSendingToBeta updateUser={()=>updateUser()}/>\r\n                    }{ isInitialUpload &&\r\n                        <InitialUpload updateUser={()=>updateUser()}/>\r\n                    }{ isReview &&\r\n                        <BookReview updateUser={()=>updateUser()} />\r\n                    }{ isPayment &&\r\n                        <Payment updateUser={()=>updateUser()} />\r\n                    }{ isReviewPreview &&\r\n                        <ReviewPage updateUser={()=>updateUser()} />\r\n                    }{ isChooseBetaReader &&\r\n                        <ChooseBetaReader updateUser={()=>updateUser()} />\r\n                    }{leaveComment &&\r\n                        <LeaveComment updateUser={()=>updateUser()}/>\r\n                    }{uploadUpdatedBook &&\r\n                        <UploadUpdatedBook updateUser={()=>updateUser()}/>\r\n                    }{ (editorReview || lectorReview || mainEditorReview || printBook) &&\r\n                        <BookReviewFinal updateUser={()=>updateUser()} type={type}/>\r\n                    }{ isFileAComplaint &&\r\n                        <FileAComlpaint updateUser={()=>updateUser()}/>\r\n                    }{ isChooseEditor &&\r\n                        <ChooseEditors updateUser={()=>updateUser()} />\r\n                    }{ downloadAndReview &&\r\n                        <DownloadBooksAndLeaveNotes updateUser={()=>updateUser()} />\r\n                    }{ isReviewNotes &&\r\n                        <ReviewNotes updateUser={()=>updateUser()} />\r\n                    }{ findReplacement &&\r\n                        <FindReplacement updateUser={()=>updateUser()}/>\r\n                    }\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default withRouter(LoggedInHomepage);\r\n\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\downloadBook.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\SidebarList.js",["236"],"import React from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst SidebarList = ({history, user}) => {\r\n    function renderTasks(tasks) {\r\n        return tasks.map((task) => {\r\n            console.log(task);\r\n            return (\r\n                <ListItem  onClick={() => {\r\n                    history.push({\r\n                        pathname:`${TaskNameRoutes(task.name)}/${task.taskId}`,\r\n                        state: {\r\n                          taskId: task.taskId\r\n                        }\r\n                      });                  \r\n                    }} button>\r\n                <ListItemText primary={(task.name.replace(/([A-Z])/g, ' $1').trim()).toUpperCase()} />\r\n                </ListItem>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {\r\n                user.tasks.length > 0 &&\r\n                <div>\r\n                    {renderTasks(user.tasks)}\r\n                </div>\r\n            }\r\n        </List>\r\n    );\r\n}\r\nexport default withRouter(SidebarList);\r\n\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\SidebarStyling.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\bookReview\\BookReview.js",["237","238","239","240","241","242","243","244","245","246","247"],"import React, { useState } from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport getUser from '../../functions/UserFunctions.js';\r\nimport './BookReview.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport validate from '../../functions/FormFunctions.js';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport streamSaver from 'streamsaver';\r\n\r\n\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst BookReview = ({ history,updateUser }) => {\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [ writer, setWriter ] = useState('');\r\n    const [taskId, setTaskId] = React.useState('');\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/review/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setWriter(resp.data.writer);\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert.fire({\r\n                text:'Error occured while getting fields, please try again.',\r\n            }); }\r\n        );\r\n    }, []);\r\n\r\n    \r\n    function submitReview(e) {\r\n\r\n        e.preventDefault();   \r\n        const returnValue = [];\r\n        let dataIsValid = true;\r\n        formFields.forEach(field => {\r\n\r\n            validate(field,field.value.value,setIsValid,isValid);\r\n            if(Object.keys(isValid).length > 0){\r\n                setValidationMessage(`Input value for field ${field.id} should be`)\r\n                dataIsValid = false; \r\n            }\r\n            \r\n            if(field.type.name.includes('enum')){\r\n                field.value.value = selected.value;\r\n            }\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n        \r\n        \r\n        if(dataIsValid){\r\n            console.log('taskid',taskId);\r\n            console.log(returnValue);\r\n\r\n            axios.post(`${defaultUrl}/api/reviews/save-review/${history.location.state.taskId}/${writer}`, returnValue).then(\r\n            (resp) => {\r\n                console.log(resp);\r\n                alert.fire({\r\n                    text:'You left review successfully!',\r\n                });\r\n                updateUser();\r\n                history.push('/');\r\n            },\r\n            (resp) => { \r\n                alert.fire({\r\n                    text:'Error occured, please try again.',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    }\r\n\r\n    return (     \r\n        <div className=\"contentDiv\">\r\n            <h3>You can download PDF files and rate writer based on them.</h3>\r\n            <div className=\"reviewDiv\">\r\n               <p className=\"reviewWriter\">Writer's username: </p> \r\n               <p className=\"reviewWriterName\">{writer}</p>\r\n            </div>\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>               \r\n                    <CamundaForm\r\n                    formFields={formFields}\r\n                    onSubmit={(e) => { submitReview(e) }} \r\n                    shouldSubmit={shouldSubmit} \r\n                    setShouldSubmit={setShouldSubmit}\r\n                    setValidationMessage={setValidationMessage}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                    setformFields={setformFields}\r\n                    isValid={isValid}\r\n                    setIsValid={setIsValid}\r\n                    />              \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n       \r\n    );\r\n}\r\nexport default withRouter(BookReview);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\bookReview\\ReviewPage.js",["248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { useState } from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport getUser from '../../functions/UserFunctions.js';\r\nimport './BookReview.css';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport streamSaver from 'streamsaver';\r\nimport {validate} from '../../functions/FormFunctions';\r\nimport { alert } from '../../functions/alertSwal' \r\n\r\nconst ReviewPage = ({ history}) => {\r\n    const [ writer, setWriter ] = useState('');\r\n    const [reviews, setReviews] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n\r\n        let token = localStorage.getItem('token');\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + token}\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/api/reviews/all`, options).then(\r\n            (resp) => {\r\n                setReviews(resp.data);\r\n                console.log(resp.data);\r\n            },\r\n            (resp) => { alert(\"Cannot load reviews.\"); }\r\n        );\r\n    }, []);\r\n\r\n    function renderReviews() {\r\n        return(\r\n            reviews.map(review => {\r\n                return(\r\n                    <Card className=\"reviewCard\">\r\n                        <Card.Body className={review.vote ? \"cardBodyReview\" : \"cardBodyComment\"}> \r\n                            <div className=\"cardLeft\">   \r\n                                {review.bookName && <p>Book name: </p>}        \r\n                                {review.vote && <p>Vote: </p>}\r\n                                <p>Comment: </p>\r\n                            </div>\r\n                            <div className=\"cardRight\">\r\n                                {review.bookName && <p>{review.bookName}</p>}\r\n                                {review.vote && <p>{review.vote}</p>}\r\n                                <p>{review.comment}</p>\r\n                            </div> \r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n\r\n    return (     \r\n        <div className=\"contentDiv\">\r\n            <h3>Reviews</h3>\r\n            { reviews.length > 0 &&\r\n                <div className=\"reviewsDiv\">\r\n                    {renderReviews()}\r\n                </div>\r\n            }\r\n        </div>\r\n       \r\n    );\r\n}\r\nexport default withRouter(ReviewPage);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\uploadPDF\\InitialUpload.js",["260","261","262","263","264","265","266","267","268","269","270"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport './InitialUpload.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { validate } from '../../functions/FormFunctions';\r\nimport { alert } from '../../functions/alertSwal' \r\n\r\nconst InitialUpload = ({ history,updateUser }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [taskId, setTaskId] = React.useState('');\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n    const [uploadedFiles, setUploadedFiles] = React.useState([]);\r\n    const [taskName, setTaskName] = React.useState('');\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setTaskName(resp.data.taskName);\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n\r\n    function SavePdfs(e) {\r\n\r\n        e.preventDefault();\r\n        const returnValue = [];\r\n\r\n        formFields.forEach(field => {\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n\r\n        console.log(returnValue);\r\n\r\n        var numOfPdfs = 0;\r\n\r\n        if(taskName === 'UploadPDFForm'){\r\n            returnValue[0].fieldValue.forEach(item => {numOfPdfs++});\r\n            if(numOfPdfs < 4) {\r\n                alert(\"You have to upload minimum of 2 PDF files!\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        axios.post(`${defaultUrl}/api/books/save-pdfs/${history.location.state.taskId}`, returnValue, options).then(\r\n            (resp) => {\r\n                alert('Your documents are uploaded successfully.')\r\n                updateUser();\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert(\"Uploading failed, try again.\");\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contentDiv\">\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>\r\n                    <CamundaForm\r\n                        formFields={formFields}\r\n                        onSubmit={(e) => { SavePdfs(e) }}\r\n                        shouldSubmit={shouldSubmit}\r\n                        setShouldSubmit={setShouldSubmit}\r\n                        setValidationMessage={setValidationMessage}\r\n                        selected={selected}\r\n                        setSelected={setSelected}\r\n                        setformFields={setformFields}\r\n                        isValid={isValid}\r\n                        setIsValid={setIsValid}\r\n                        uploadedFiles={uploadedFiles}\r\n                        setUploadedFiles={setUploadedFiles}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(InitialUpload);\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\payment\\Payment.js",["271","272","273","274","275","276","277","278"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { validate } from '../../functions/FormFunctions';\r\nimport { alert } from '../../functions/alertSwal' \r\n\r\nconst Payment = ({ history,updateUser }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    const mystyle = {\r\n        fontFamily: 'Calibri',\r\n        fontSize: '21px',\r\n        color: ' rgb(93, 106, 117)'\r\n      };\r\n\r\n    function pay(e) {\r\n\r\n        let token = localStorage.getItem('token');\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + token}\r\n        };\r\n\r\n        e.preventDefault();\r\n\r\n        axios.post(`${defaultUrl}/api/writers/activate-account/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                alert('The account is activated')\r\n                updateUser();\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert(\"Error occurd. Couldn't activate the account.\");\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"contentDiv\">\r\n            <p style={mystyle}>By clicking on submit button, you are confirming to pay for your registration on this website.</p>\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>\r\n                    <CamundaForm\r\n                        formFields={formFields}\r\n                        onSubmit={(e) => { pay(e) }}\r\n                        shouldSubmit={shouldSubmit}\r\n                        setShouldSubmit={setShouldSubmit}\r\n                        selected={selected}\r\n                        setSelected={setSelected}\r\n                        setformFields={setformFields}\r\n                        isValid={isValid}\r\n                        setIsValid={setIsValid}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(Payment);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ComparePlagiats.js",["279","280","281","282","283","284"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst ComparePlagiats = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    //const [ writer, setWriter ] = useState('');\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('enum')) {\r\n                field.value.value = selected.value;\r\n                returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n            }\r\n            if (field.type.name.includes('multiFilesDownload')){\r\n                returnArray.push({ fieldId: field.id, fieldValue: field.type.values });\r\n            }\r\n        });\r\n        \r\n        axios.post(`${defaultUrl}/api/books/submit-plagiarism-decision/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                console.log(resp.data);\r\n                if(resp.data !== \"\"){\r\n                    history.push({\r\n                        pathname:`${TaskNameRoutes(resp.data.taskName)}/${resp.data.taskId}`,\r\n                        state: {\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                }else{\r\n                    history.push('/');\r\n                }\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:'Error occured please try again',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n            <Card className='cardHolder'>\r\n            <CamundaForm\r\n            formFields={formFields}\r\n            setformFields={setformFields}\r\n            setShouldSubmit={setShouldSubmit}\r\n            setValidationMessage={setValidationMessage}\r\n            isValid={isValid}\r\n            setIsValid={setIsValid}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n            onSubmit={(e) => { handleSubmit(e) }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\nexport default withRouter(ComparePlagiats);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DeclineExplanation.js",["285","286","287"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport './Global.css'\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst DeclineExplanation = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function submitExplanation(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('singleEnum')) {\r\n                field.value.value = selected;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/api/books/submit-explanation/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert.fire({text:'Explanation submited'});\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:'Error occured please try again',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <Card className='cardHolder'>\r\n        <CamundaForm\r\n        formFields={formFields}\r\n        setformFields={setformFields}\r\n        setShouldSubmit={setShouldSubmit}\r\n        setValidationMessage={setValidationMessage}\r\n        isValid={isValid}\r\n        setIsValid={setIsValid}\r\n        selected={selected}\r\n        setSelected={setSelected} \r\n        onSubmit={(e) => { submitExplanation(e) }}  \r\n        />\r\n        </Card>\r\n\r\n    )\r\n\r\n}\r\nexport default withRouter(DeclineExplanation);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ReviewBookGeneral.js",["288","289","290","291"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes.js';\r\nimport './Global.css'\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst ReviewBookGeneral = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    const submitReview = (e) => {\r\n\r\n            e.preventDefault();\r\n            const returnArray = [];\r\n            formFields.forEach(field => {\r\n    \r\n                if (field.type.name.includes('enum')) {\r\n                    field.value.value = selected;\r\n                }\r\n                returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n            });\r\n    \r\n            axios.post(`${defaultUrl}/api/books/save-general-book-data-review/${history.location.state.taskId}`, returnArray, options).then(\r\n                (resp) => {\r\n                    updateUser();\r\n                    alert.fire({\r\n                        title: \"Success\",\r\n                        text: 'Your review has been submited',\r\n                        type: \"success\",\r\n                        button: true\r\n                      });\r\n\r\n                      if(resp.data !== \"\"){\r\n                        history.push({\r\n                            pathname:`${TaskNameRoutes(resp.data.taskName)}/${resp.data.taskId}`,\r\n                            state: {\r\n                              taskId: resp.data.taskId\r\n                            }\r\n                          }); \r\n                    }else{\r\n                        history.push('/');\r\n                    }\r\n                },\r\n                (resp) => {\r\n                    alert.fire({\r\n                        text:'Error occured please try again',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n\r\n    return(\r\n        <Card className=\"cardHolder\">\r\n        <CamundaForm\r\n        formFields={formFields}\r\n        setformFields={setformFields}\r\n        setShouldSubmit={setShouldSubmit}\r\n        setValidationMessage={setValidationMessage}\r\n        isValid={isValid}\r\n        setIsValid={setIsValid}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        onSubmit={(e) => { submitReview(e) }}\r\n        />\r\n        </Card>\r\n    )\r\n}\r\nexport default withRouter(ReviewBookGeneral);\r\n\r\n{/* <CamundaForm\r\nformFields={formFields}\r\nonSubmit={(e) => { SendRegisterRequest(e) }} \r\nshouldSubmit={shouldSubmit} \r\nsetShouldSubmit={setShouldSubmit}\r\nsetValidationMessage={setValidationMessage}\r\nselected={selected}\r\nsetSelected={setSelected}\r\nsetformFields={setformFields}\r\nisValid={isValid}\r\nsetIsValid={setIsValid}\r\n/>        */}","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DownloadBook.js",["292","293","294","295","296","297"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst DownloadBook = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('enum')) {\r\n                field.value.value = selected.value;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n        console.log(returnArray)\r\n        axios.post(`${defaultUrl}/api/books/submit-approval/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                console.log(resp.data);\r\n                //alert.fire({text:'Your decision about this book has been submitted.'});\r\n\r\n                if(resp.data !== \"\"){\r\n                    history.push({\r\n                        pathname:`${TaskNameRoutes(resp.data.taskName)}/${resp.data.taskId}`,\r\n                        state: {\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                }else{\r\n                    history.push('/');\r\n                }\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:'Error occured, please try again.',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"title\">You can download the book and decide do you aprove it or not.</p>\r\n            <Card className='cardHolder'>\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                onSubmit={(e) => { handleSubmit(e) }}\r\n                setSelected={setSelected}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(DownloadBook);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\PublishBookGeneralData.js",["298","299"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport './Global.css';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst PublishBookGeneralData = ({ taskId, history }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert.fire({\r\n                text:'Error occured please try again',\r\n            }); }\r\n        );\r\n    }, []);\r\n\r\n    function submitGeneralBookData(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('singleEnum')) {\r\n                field.value.value = selected;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/api/books/save-general-book-data/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n\r\n                alert.fire({\r\n                    title: \"Success\",\r\n                    text: 'Your book is now under review.When review is finished you will be notified via email.Thank you, eBook team.',\r\n                    type: \"success\",\r\n                    button: true\r\n                  });\r\n                  history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:'Error occured please try again',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '40%', padding: '15px', marginLeft: '25%' }}>\r\n\r\n            <CamundaForm\r\n                id=\"camundaForm\"\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                onSubmit={submitGeneralBookData}\r\n                setValidationMessage={setValidationMessage}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                shouldSubmit={shouldSubmit}\r\n                setShouldSubmit={setShouldSubmit}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default withRouter(PublishBookGeneralData);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\DecideSendingToBeta.js",["300","301","302","303","304","305"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst DecideSendingToBeta = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('enum')) {\r\n                field.value.value = selected.value;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n        console.log(returnArray)\r\n        axios.post(`${defaultUrl}/api/books/submit-sending-to-beta/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                console.log(resp.data);\r\n\r\n                if(resp.data !== \"\" && resp.data.taskName === \"Filter beta readers\"){\r\n                    history.push({\r\n                        pathname:`${TaskNameRoutes(resp.data.taskName)}/${resp.data.taskId}`,\r\n                        state: {\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                }else{\r\n                    history.push('/');\r\n                }\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:'Error occured, please try again.',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Card className='cardHolder'>\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                onSubmit={(e) => { handleSubmit(e) }}\r\n                setSelected={setSelected}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(DecideSendingToBeta);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\LeaveComment.js",["306","307"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport CamundaForm from '../CamundaForm';\r\nimport { Card } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { alert } from '../../functions/alertSwal';\r\n\r\nconst LeaveComment =({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function submitComment(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/api/books/submit-comment/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert('Comment submited');\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert('Error occured please try again');\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '40%', padding: '15px', marginLeft: '25%' }}>\r\n\r\n            <CamundaForm\r\n                id=\"camundaForm\"\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                shouldSubmit={shouldSubmit}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                onSubmit={submitComment}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n\r\n}\r\nexport default withRouter(LeaveComment);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\UploadRestOfTheWork.js",["308","309","310","311","312"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nconst alert = withReactContent(Swal)\r\n\r\nconst UploadRestOfTheWork = ({history,updateUser}) =>{\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function SavePdfs(e) {\r\n\r\n        let token = localStorage.getItem('token');\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + token}\r\n        };\r\n\r\n        e.preventDefault();\r\n        const returnValue = [];\r\n\r\n        formFields.forEach(field => {\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/api/books/submit-rest-of-work/${history.location.state.taskId}`, returnValue, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                if(resp.data.hasOwnProperty(\"message\")){\r\n                    alert.fire({\r\n                        text:resp.data.message,\r\n                        confirmButtonText: `Okay`,}).then((result) => {\r\n\r\n                        if (result.isConfirmed) {\r\n                          history.push('/');\r\n                        }\r\n                      })\r\n                }else{\r\n                alert.fire({\r\n                    text:'Your documents are uploaded successfully.',\r\n                    confirmButtonText: `Okay`,}).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      history.push('/');\r\n                    }\r\n                  })\r\n                }\r\n                //window.location.reload();\r\n            },\r\n            (resp) => {\r\n                alert.fire({text:'Error while uploading files,please try again.'});\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <Card className=\"cardHolder\">\r\n            <CamundaForm\r\n            formFields={formFields}\r\n            setformFields={setformFields}\r\n            setShouldSubmit={setShouldSubmit}\r\n            setValidationMessage={setValidationMessage}\r\n            isValid={isValid}\r\n            setIsValid={setIsValid}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n            onSubmit={(e) => { SavePdfs(e) }}\r\n            uploadedFiles={uploadedFiles}\r\n            setUploadedFiles={setUploadedFiles}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\nexport default withRouter(UploadRestOfTheWork);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\ChooseBetaReader.js",["313"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Global.css';\r\nimport {alert} from '../../functions/alertSwal';\r\n\r\nconst ChooseBetaReader = ({ taskId, history,updateUser }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function choose(e) {\r\n\r\n        e.preventDefault();\r\n        var usernames = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('multiEnum_betas')) {\r\n                selected.forEach(s => {\r\n                    usernames.push({ fieldId: s.value, fieldValue: s.label });\r\n                })\r\n            }\r\n        });\r\n\r\n        console.log(usernames);\r\n\r\n        axios.post(`${defaultUrl}/api/betareaders/choose-beta-reader/${history.location.state.taskId}`, usernames, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n\r\n                alert(\"You successfully selected the Beta readers.\");\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert('Error occured please try again');\r\n                history.push('/');\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card className='cardHolder'>\r\n            <CamundaForm\r\n                id=\"camundaForm\"\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                onSubmit={choose}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                shouldSubmit={shouldSubmit}\r\n                setShouldSubmit={setShouldSubmit}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default withRouter(ChooseBetaReader);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\ChooseEditors.js",["314","315"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport {alert} from '../../functions/alertSwal';\r\n\r\nconst ChooseEditors = ({ taskId, history,updateUser }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function choose(e) {\r\n\r\n        e.preventDefault();\r\n        var usernames = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('multiEnum_')) {\r\n                selected.forEach(s => {\r\n                    usernames.push({ fieldId: s.value, fieldValue: s.label });\r\n                })\r\n            }\r\n        });\r\n\r\n        console.log(usernames);\r\n\r\n        axios.post(`${defaultUrl}/plagiarism/choose-editors/${history.location.state.taskId}`, usernames, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n\r\n                alert(\"You successfully selected the editors.\");\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert('Error occured please try again.');\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card className='cardHolder'>\r\n            <CamundaForm\r\n                id=\"camundaForm\"\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                onSubmit={choose}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                shouldSubmit={shouldSubmit}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default withRouter(ChooseEditors);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\UploadUpdatedBook.js",["316","317","318","319","320"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport { alert } from '../../functions/alertSwal'\r\n\r\nconst UploadUpdatedBook = ({history,updateUser}) =>{\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function SavePdfs(e) {\r\n\r\n        let token = localStorage.getItem('token');\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + token}\r\n        };\r\n\r\n        e.preventDefault();\r\n        const returnValue = [];\r\n\r\n        formFields.forEach(field => {\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/api/books/submit-updated-book/${history.location.state.taskId}`, returnValue, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                if(resp.data.hasOwnProperty(\"message\")){\r\n                    alert(resp.data.message);\r\n                }else{\r\n                    alert('Your document is uploaded successfully!');\r\n                }\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert('Error while uploading files,please try again.');\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p className='title'>You can see comments for your book in your email. Based on them, you can edit book and upload it here.</p>\r\n            <Card className=\"cardHolder\">\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                onSubmit={(e) => { SavePdfs(e) }}\r\n                uploadedFiles={uploadedFiles}\r\n                setUploadedFiles={setUploadedFiles}\r\n                />\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(UploadUpdatedBook);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\FileAComplaint.js",["321","322"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst FileAComlpaint = ({ taskId, history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert.fire({\r\n                text:'Error occured please try again',\r\n            }); }\r\n        );\r\n    }, []);\r\n\r\n    function submitComplaint(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/plagiarism/file-complaint/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert.fire({\r\n                    title: \"Success\",\r\n                    text: 'Your file a complaint successfully.',\r\n                    type: \"success\",\r\n                    button: true\r\n                  });\r\n                  history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text:\"You either didn't enter right writer name,book title or the book wasn't writer by that writer.Please try again\",\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '40%', padding: '15px', marginLeft: '25%' }}>\r\n\r\n            <CamundaForm\r\n                id=\"camundaForm\"\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                onSubmit={submitComplaint}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                setValidationMessage={setValidationMessage}\r\n                shouldSubmit={shouldSubmit}\r\n                setShouldSubmit={setShouldSubmit}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport default withRouter(FileAComlpaint);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\publish-book\\BookReview.js",["323","324","325","326","327","328"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport './Global.css';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes';\r\nimport {alert} from '../../functions/alertSwal'\r\n\r\nconst BookReview = ({history,updateUser,type}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    React.useEffect(() => {\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n        \r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n\r\n            if (field.type.name.includes('enum')) {\r\n                field.value.value = selected.value;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n        console.log(returnArray)\r\n        let reviewType = '';\r\n        if (type === 'lector') {\r\n            reviewType = 'lector-review';\r\n        } else if (type === 'mainEditor') {\r\n            reviewType = 'main-editor-review';\r\n        } else if (type === 'editor') {\r\n            reviewType = 'editor-review';\r\n        } else if (type === 'printBook') {\r\n            reviewType = 'print-book';\r\n        }\r\n        console.log(options);\r\n        axios.post(`${defaultUrl}/api/books/${reviewType}/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert('Your decision is successfully submited!');\r\n                if(resp.data !== \"\" && resp.data.taskName === \"PrintBook\"){\r\n                    history.push({\r\n                        pathname:`${TaskNameRoutes(resp.data.taskName)}/${resp.data.taskId}`,\r\n                        state: {\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                }else{\r\n                    history.push('/');\r\n                }\r\n\r\n            },\r\n            () => {\r\n                alert('Error occured.');\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            { type===\"printBook\" && \r\n                <p className=\"title\">This book has been approved through all checks. By clicking on submit, book will be\r\n                sent to printing and indexing.</p>\r\n            }\r\n            <Card className='cardHolder'>\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                onSubmit={(e) => { handleSubmit(e) }}\r\n                setSelected={setSelected}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(BookReview);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\TaskNameRoutes.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\DownloadBooksAndLeaveNotes.js",["329","330","331","332","333"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport { alert } from '../../functions/alertSwal';\r\n\r\nconst DownloadBooksAndLeaveNotes = ({history,updateUser})=> {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    function submitNotes(e) {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        formFields.forEach(field => {\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        axios.post(`${defaultUrl}/plagiarism/submit-review/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert('Your  notes successfully.');\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert(\"Error,please try again\");\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"title\">You can download both books,compare them and leave your notes.</p>\r\n            <Card className='cardHolder'>\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                onSubmit={submitNotes}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default withRouter (DownloadBooksAndLeaveNotes);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\FindReplacement.js",["334","335","336","337","338"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig';\r\nimport { Card } from 'react-bootstrap';\r\nimport { alert } from '../../functions/alertSwal';\r\n\r\nconst FindReplacement = ({history,updateUser}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId,setTaskId] =  React.useState(history.location.state.taskId);\r\n    const [maxToChoose,setMaxToChoose] = React.useState(undefined);\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n        \r\n        axios.get(`${defaultUrl}/plagiarism/get-max-replacement/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                    setMaxToChoose(resp.data);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n\r\n\r\n    }, []);\r\n\r\n    const submitReplacements = (e) => {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n\r\n        formFields.forEach(field => {\r\n            if (field.type.name.includes('multiEnum_')) {\r\n                selected.forEach(s => {\r\n                    returnArray.push({ fieldId: s.value, fieldValue: s.label });\r\n                })\r\n            }\r\n        });\r\n\r\n        if(maxToChoose !== undefined){\r\n            if(selected.length !== maxToChoose){\r\n                alert(`You can only choose ${maxToChoose} editors for replacement`);\r\n                return;\r\n            }\r\n        }\r\n        \r\n        axios.post(`${defaultUrl}/plagiarism/submit-replacements/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert('You submitted replacement editors successfully.');\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert(\"Error occured.\");\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"title\">Please choose replacement editors to review plagiats.</p>\r\n            <Card className='cardHolder'>\r\n                <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                onSubmit={submitReplacements}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default withRouter(FindReplacement);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\plagiarism\\ReviewNotes.js",["339","340","341","342"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { Card } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { TaskNameRoutes } from '../../functions/TaskNameRoutes.js';\r\n\r\nconst alert = withReactContent(Swal)\r\n\r\nconst ReviewNotes = ({ history, updateUser }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n\r\n\r\n    const options = {\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/process/get-form-fields/${history.location.state.taskId}`, options).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n    const submitReview = (e) => {\r\n\r\n        e.preventDefault();\r\n        const returnArray = [];\r\n        console.log('selected',selected);\r\n        formFields.forEach(field => {\r\n            if (field.type.name.includes('enum')) {\r\n                field.value.value = selected.value;\r\n            }\r\n            returnArray.push({ fieldId: field.id, fieldValue: field.value.value });\r\n        });\r\n\r\n        \r\n        axios.post(`${defaultUrl}/plagiarism/submit-votes/${history.location.state.taskId}`, returnArray, options).then(\r\n            (resp) => {\r\n                updateUser();\r\n                alert.fire({\r\n                    title: \"Success\",\r\n                    text: 'You reviewed notes successfully.',\r\n                    type: \"success\",\r\n                    button: true\r\n                });\r\n                history.push('/');\r\n            },\r\n            (resp) => {\r\n                alert.fire({\r\n                    text: \"Error occured.\",\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card className=\"cardHolder\">\r\n            <CamundaForm\r\n                formFields={formFields}\r\n                setformFields={setformFields}\r\n                setShouldSubmit={setShouldSubmit}\r\n                setValidationMessage={setValidationMessage}\r\n                isValid={isValid}\r\n                setIsValid={setIsValid}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                onSubmit={(e) => { submitReview(e) }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\nexport default withRouter(ReviewNotes);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\RegistrationForm.js",["343","344","345","346","347","348","349","350","351","352"],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":15},{"ruleId":"357","severity":1,"message":"361","line":3,"column":17,"nodeType":"359","messageId":"360","endLine":3,"endColumn":27},{"ruleId":"357","severity":1,"message":"362","line":3,"column":29,"nodeType":"359","messageId":"360","endLine":3,"endColumn":35},{"ruleId":"357","severity":1,"message":"363","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"364","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":17,"column":20,"nodeType":"359","messageId":"360","endLine":17,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":32,"column":8,"nodeType":"369","endLine":32,"endColumn":10,"suggestions":"370"},{"ruleId":"357","severity":1,"message":"371","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":16},{"ruleId":"367","severity":1,"message":"372","line":14,"column":8,"nodeType":"369","endLine":14,"endColumn":10,"suggestions":"373"},{"ruleId":"367","severity":1,"message":"372","line":11,"column":8,"nodeType":"369","endLine":11,"endColumn":10,"suggestions":"374"},{"ruleId":"357","severity":1,"message":"375","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":16},{"ruleId":"357","severity":1,"message":"376","line":1,"column":18,"nodeType":"359","messageId":"360","endLine":1,"endColumn":22},{"ruleId":"357","severity":1,"message":"377","line":4,"column":17,"nodeType":"359","messageId":"360","endLine":4,"endColumn":36},{"ruleId":"357","severity":1,"message":"378","line":4,"column":38,"nodeType":"359","messageId":"360","endLine":4,"endColumn":48},{"ruleId":"357","severity":1,"message":"379","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"380","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":207,"column":37,"nodeType":"383","endLine":207,"endColumn":106},{"ruleId":"357","severity":1,"message":"384","line":248,"column":13,"nodeType":"359","messageId":"360","endLine":248,"endColumn":18},{"ruleId":"357","severity":1,"message":"385","line":251,"column":13,"nodeType":"359","messageId":"360","endLine":251,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"389","line":18,"column":14,"nodeType":"359","messageId":"360","endLine":18,"endColumn":26},{"ruleId":"357","severity":1,"message":"390","line":19,"column":15,"nodeType":"359","messageId":"360","endLine":19,"endColumn":20},{"ruleId":"357","severity":1,"message":"391","line":25,"column":15,"nodeType":"359","messageId":"360","endLine":25,"endColumn":21},{"ruleId":"357","severity":1,"message":"392","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"393","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":15},{"ruleId":"357","severity":1,"message":"394","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"395","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":23},{"ruleId":"357","severity":1,"message":"396","line":12,"column":8,"nodeType":"359","messageId":"360","endLine":12,"endColumn":24},{"ruleId":"357","severity":1,"message":"397","line":13,"column":10,"nodeType":"359","messageId":"360","endLine":13,"endColumn":21},{"ruleId":"357","severity":1,"message":"398","line":25,"column":11,"nodeType":"359","messageId":"360","endLine":25,"endColumn":29},{"ruleId":"357","severity":1,"message":"399","line":29,"column":11,"nodeType":"359","messageId":"360","endLine":29,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":49,"column":25,"nodeType":"383","endLine":49,"endColumn":96},{"ruleId":"400","severity":1,"message":"401","line":52,"column":25,"nodeType":"383","endLine":52,"endColumn":96},{"ruleId":"400","severity":1,"message":"401","line":55,"column":25,"nodeType":"383","endLine":55,"endColumn":96},{"ruleId":"357","severity":1,"message":"402","line":6,"column":22,"nodeType":"359","messageId":"360","endLine":6,"endColumn":31},{"ruleId":"357","severity":1,"message":"393","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":15},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":4,"column":16,"nodeType":"359","messageId":"360","endLine":4,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"405","line":4,"column":62,"nodeType":"359","messageId":"360","endLine":4,"endColumn":65},{"ruleId":"357","severity":1,"message":"406","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":15},{"ruleId":"357","severity":1,"message":"407","line":12,"column":8,"nodeType":"359","messageId":"360","endLine":12,"endColumn":19},{"ruleId":"357","severity":1,"message":"366","line":21,"column":20,"nodeType":"359","messageId":"360","endLine":21,"endColumn":29},{"ruleId":"357","severity":1,"message":"364","line":25,"column":12,"nodeType":"359","messageId":"360","endLine":25,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":41,"column":8,"nodeType":"369","endLine":41,"endColumn":10,"suggestions":"408"},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":4,"column":16,"nodeType":"359","messageId":"360","endLine":4,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"405","line":4,"column":62,"nodeType":"359","messageId":"360","endLine":4,"endColumn":65},{"ruleId":"357","severity":1,"message":"406","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":15},{"ruleId":"357","severity":1,"message":"409","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":19},{"ruleId":"357","severity":1,"message":"407","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":19},{"ruleId":"357","severity":1,"message":"410","line":10,"column":9,"nodeType":"359","messageId":"360","endLine":10,"endColumn":17},{"ruleId":"357","severity":1,"message":"411","line":14,"column":13,"nodeType":"359","messageId":"360","endLine":14,"endColumn":19},{"ruleId":"357","severity":1,"message":"412","line":14,"column":21,"nodeType":"359","messageId":"360","endLine":14,"endColumn":30},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":4,"column":16,"nodeType":"359","messageId":"360","endLine":4,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"405","line":4,"column":62,"nodeType":"359","messageId":"360","endLine":4,"endColumn":65},{"ruleId":"357","severity":1,"message":"410","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":18},{"ruleId":"357","severity":1,"message":"364","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":17,"column":20,"nodeType":"359","messageId":"360","endLine":17,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":34,"column":8,"nodeType":"369","endLine":34,"endColumn":10,"suggestions":"413"},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":4,"column":16,"nodeType":"359","messageId":"360","endLine":4,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"405","line":4,"column":62,"nodeType":"359","messageId":"360","endLine":4,"endColumn":65},{"ruleId":"357","severity":1,"message":"410","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":28,"column":8,"nodeType":"369","endLine":28,"endColumn":10,"suggestions":"414"},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"416","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":22,"column":12,"nodeType":"359","messageId":"360","endLine":22,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":22,"column":19,"nodeType":"359","messageId":"360","endLine":22,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":35,"column":8,"nodeType":"369","endLine":35,"endColumn":10,"suggestions":"417"},{"ruleId":"357","severity":1,"message":"416","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":32,"column":8,"nodeType":"369","endLine":32,"endColumn":10,"suggestions":"418"},{"ruleId":"357","severity":1,"message":"416","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":34,"column":8,"nodeType":"369","endLine":34,"endColumn":10,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":95,"column":1,"nodeType":"422","messageId":"423","endLine":106,"endColumn":14},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"416","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":21,"column":19,"nodeType":"359","messageId":"360","endLine":21,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":34,"column":8,"nodeType":"369","endLine":34,"endColumn":10,"suggestions":"424"},{"ruleId":"357","severity":1,"message":"364","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":34,"column":8,"nodeType":"369","endLine":34,"endColumn":10,"suggestions":"425"},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"416","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":21,"column":19,"nodeType":"359","messageId":"360","endLine":21,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":34,"column":8,"nodeType":"369","endLine":34,"endColumn":10,"suggestions":"426"},{"ruleId":"357","severity":1,"message":"364","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":27,"column":8,"nodeType":"369","endLine":27,"endColumn":10,"suggestions":"427"},{"ruleId":"357","severity":1,"message":"416","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":20,"column":19,"nodeType":"359","messageId":"360","endLine":20,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":33,"column":8,"nodeType":"369","endLine":33,"endColumn":10,"suggestions":"428"},{"ruleId":"367","severity":1,"message":"368","line":28,"column":8,"nodeType":"369","endLine":28,"endColumn":10,"suggestions":"429"},{"ruleId":"357","severity":1,"message":"364","line":15,"column":12,"nodeType":"359","messageId":"360","endLine":15,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":28,"column":8,"nodeType":"369","endLine":28,"endColumn":10,"suggestions":"430"},{"ruleId":"357","severity":1,"message":"416","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":15,"column":12,"nodeType":"359","messageId":"360","endLine":15,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":18,"column":19,"nodeType":"359","messageId":"360","endLine":18,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":31,"column":8,"nodeType":"369","endLine":31,"endColumn":10,"suggestions":"431"},{"ruleId":"357","severity":1,"message":"364","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":33,"column":8,"nodeType":"369","endLine":33,"endColumn":10,"suggestions":"432"},{"ruleId":"357","severity":1,"message":"415","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"416","line":15,"column":12,"nodeType":"359","messageId":"360","endLine":15,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":18,"column":19,"nodeType":"359","messageId":"360","endLine":18,"endColumn":28},{"ruleId":"367","severity":1,"message":"433","line":31,"column":8,"nodeType":"369","endLine":31,"endColumn":10,"suggestions":"434"},{"ruleId":"357","severity":1,"message":"416","line":13,"column":12,"nodeType":"359","messageId":"360","endLine":13,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":16,"column":19,"nodeType":"359","messageId":"360","endLine":16,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":29,"column":8,"nodeType":"369","endLine":29,"endColumn":10,"suggestions":"435"},{"ruleId":"357","severity":1,"message":"416","line":13,"column":12,"nodeType":"359","messageId":"360","endLine":13,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":29},{"ruleId":"357","severity":1,"message":"365","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":18},{"ruleId":"357","severity":1,"message":"366","line":16,"column":19,"nodeType":"359","messageId":"360","endLine":16,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":39,"column":8,"nodeType":"369","endLine":39,"endColumn":10,"suggestions":"436"},{"ruleId":"357","severity":1,"message":"437","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":24},{"ruleId":"357","severity":1,"message":"416","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":24},{"ruleId":"357","severity":1,"message":"364","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":33,"column":8,"nodeType":"369","endLine":33,"endColumn":10,"suggestions":"438"},{"ruleId":"357","severity":1,"message":"403","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"404","line":4,"column":16,"nodeType":"359","messageId":"360","endLine":4,"endColumn":22},{"ruleId":"357","severity":1,"message":"386","line":4,"column":24,"nodeType":"359","messageId":"360","endLine":4,"endColumn":33},{"ruleId":"357","severity":1,"message":"387","line":4,"column":35,"nodeType":"359","messageId":"360","endLine":4,"endColumn":46},{"ruleId":"357","severity":1,"message":"388","line":4,"column":48,"nodeType":"359","messageId":"360","endLine":4,"endColumn":60},{"ruleId":"357","severity":1,"message":"405","line":4,"column":62,"nodeType":"359","messageId":"360","endLine":4,"endColumn":65},{"ruleId":"357","severity":1,"message":"439","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"410","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":16},{"ruleId":"357","severity":1,"message":"364","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":29},{"ruleId":"357","severity":1,"message":"440","line":37,"column":13,"nodeType":"359","messageId":"360","endLine":37,"endColumn":24},"no-native-reassign",["441"],"no-negated-in-lhs",["442"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Switch' is defined but never used.","'React' is defined but never used.","'validationMessage' is assigned a value but never used.","'taskId' is assigned a value but never used.","'setTaskId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history.location.state.taskId' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["443"],"'HomePage' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["444"],["445"],"'AppBar' is defined but never used.","'Card' is defined but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'Link' is defined but never used.","'keys' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'field' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'handleChange' is defined but never used.","'value' is assigned a value but never used.","'fields' is assigned a value but never used.","'Drawer' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'SidebarList' is defined but never used.","'handleDrawerToggle' is assigned a value but never used.","'theme' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useParams' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'getUser' is defined but never used.","'streamSaver' is defined but never used.",["446"],"'CamundaForm' is defined but never used.","'validate' is defined but never used.","'writer' is assigned a value but never used.","'setWriter' is assigned a value but never used.",["447"],["448"],"'useState' is defined but never used.","'shouldSubmit' is assigned a value but never used.",["449"],["450"],["451"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["452"],["453"],["454"],["455"],["456"],["457"],["458"],["459"],["460"],"React Hook React.useEffect has a missing dependency: 'history.location.state.taskId'. Either include it or remove the dependency array.",["461"],["462"],["463"],"'TaskNameRoutes' is defined but never used.",["464"],"'BetaReader' is defined but never used.","'dataIsValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"467","fix":"469"},{"desc":"465","fix":"470"},{"desc":"465","fix":"471"},{"desc":"465","fix":"472"},{"desc":"465","fix":"473"},{"desc":"465","fix":"474"},{"desc":"465","fix":"475"},{"desc":"465","fix":"476"},{"desc":"465","fix":"477"},{"desc":"465","fix":"478"},{"desc":"465","fix":"479"},{"desc":"465","fix":"480"},{"desc":"465","fix":"481"},{"desc":"465","fix":"482"},{"desc":"465","fix":"483"},{"desc":"465","fix":"484"},{"desc":"485","fix":"486"},{"desc":"465","fix":"487"},{"desc":"465","fix":"488"},{"desc":"465","fix":"489"},"Update the dependencies array to be: [history.location.state.taskId, options]",{"range":"490","text":"491"},"Update the dependencies array to be: [history]",{"range":"492","text":"493"},{"range":"494","text":"493"},{"range":"495","text":"491"},{"range":"496","text":"491"},{"range":"497","text":"491"},{"range":"498","text":"491"},{"range":"499","text":"491"},{"range":"500","text":"491"},{"range":"501","text":"491"},{"range":"502","text":"491"},{"range":"503","text":"491"},{"range":"504","text":"491"},{"range":"505","text":"491"},{"range":"506","text":"491"},{"range":"507","text":"491"},{"range":"508","text":"491"},{"range":"509","text":"491"},"Update the dependencies array to be: [history.location.state.taskId]",{"range":"510","text":"511"},{"range":"512","text":"491"},{"range":"513","text":"491"},{"range":"514","text":"491"},[1186,1188],"[history.location.state.taskId, options]",[378,380],"[history]",[329,331],[1662,1664],[1486,1488],[1143,1145],[1423,1425],[1214,1216],[1284,1286],[1369,1371],[1253,1255],[1376,1378],[1041,1043],[1357,1359],[1061,1063],[1109,1111],[1276,1278],[1231,1233],[1301,1303],"[history.location.state.taskId]",[1192,1194],[1554,1556],[1259,1261]]