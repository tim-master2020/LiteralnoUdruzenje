[{"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js":"1","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js":"2","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js":"4","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js":"5","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\Appbar.js":"6","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js":"7","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js":"8","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js":"9","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js":"10","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\camundaForm.js":"11","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js":"12","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js":"13","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\Registration.js":"14","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js":"15"},{"size":517,"mtime":1607275862844,"results":"16","hashOfConfig":"17"},{"size":345,"mtime":1607436233126,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1607275862846,"results":"19","hashOfConfig":"17"},{"size":1270,"mtime":1608659534247,"results":"20","hashOfConfig":"17"},{"size":1036,"mtime":1607442922048,"results":"21","hashOfConfig":"17"},{"size":2225,"mtime":1607443723240,"results":"22","hashOfConfig":"17"},{"size":245,"mtime":1608659362902,"results":"23","hashOfConfig":"17"},{"size":208,"mtime":1608659328311,"results":"24","hashOfConfig":"17"},{"size":150,"mtime":1607431328441,"results":"25","hashOfConfig":"17"},{"size":50,"mtime":1607432584193,"results":"26","hashOfConfig":"17"},{"size":7868,"mtime":1608474664059,"results":"27","hashOfConfig":"17"},{"size":4219,"mtime":1608662968105,"results":"28","hashOfConfig":"17"},{"size":2896,"mtime":1608477826215,"results":"29","hashOfConfig":"17"},{"size":3908,"mtime":1608661085043,"results":"30","hashOfConfig":"17"},{"size":1145,"mtime":1608663131873,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"qmx00x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js",[],["68","69"],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js",["70","71","72"],"import './App.css';\r\nimport Routes from './Routes.js';\r\nimport {Route, withRouter, Switch, BrowserRouter as Router} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js",["73","74","75","76"],"import { Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Appbar from '../../components/appbar/Appbar';\r\nimport photo1 from '../../icons/photo1.svg';\r\nimport photo2 from '../../icons/photo2.svg';\r\nimport photo3 from '../../icons/photo3.svg';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <Appbar />\r\n            <Carousel style={{heigth:'30%',width:'40%',marginLeft:'30%',marginTop:'2%'}}>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo1} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo2} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo3} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage;","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\Appbar.js",["77"],"import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport image from '../../icons/book.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button } from \"@material-ui/core\";\r\nimport './Appbar.css';\r\n\r\nconst Appbar = ({history}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          flexGrow: 0,\r\n          color:'gray',\r\n          cursor:'pointer',\r\n        },\r\n        toolbar: {\r\n            backgroundColor:'white',\r\n            boxShadow:0\r\n        },\r\n        divider:{\r\n            backgroundColor:'gray'\r\n        },\r\n        appbarButton:{\r\n            flexGrow:1,\r\n            color:'gray',\r\n            borderStyle: 'solid',\r\n            borderColor:'gray',\r\n            borderWidth:'0.5px',\r\n            marginTop:'3px',\r\n            borderRadius:'5px',\r\n            padding:'3px',\r\n            marginLeft:'7px'\r\n        }\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n           <AppBar elevation={0} position=\"static\">\r\n            <Toolbar  className={classes.toolbar}> \r\n                <Typography variant=\"h6\" className={classes.title} onClick={() => { history.push(`/`);}}>\r\n                    <img alt=\"logo\" src={image} className=\"logo\" ></img>\r\n                    eBook\r\n                </Typography>\r\n                <div className=\"loginRegButtons\">\r\n                    \r\n                    <div className= {classes.appbarButton}\r\n                        onClick={() => {history.push(`/login`);}}\r\n                    >Login</div>\r\n                    \r\n                    <div className={classes.appbarButton}\r\n                        onClick={() => { history.push(`/registration`);}}\r\n                    >Register</div>\r\n                   \r\n                </div>\r\n            </Toolbar>\r\n            <Divider className={classes.divider}/>\r\n            </AppBar>\r\n    );\r\n}\r\nexport default withRouter(Appbar);","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\camundaForm.js",["78","79","80","81"],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js",["82","83","84","85","86"],"\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport maintenance from '../icons/maintenance.svg';\r\nimport reading from '../icons/readingbook.svg';\r\nimport { React, useImperativeHandle, forwardRef } from 'react';\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport {validate} from '../functions/FormFunctions.js';\r\n\r\n\r\nconst CamundaForm = ({ formFields,\r\n    onSubmit,\r\n    shouldSubmit,\r\n    setShouldSubmit,\r\n    setValidationMessage,\r\n    selected,\r\n    setSelected,\r\n    isValid,\r\n    setIsValid,\r\n    setformFields}) => {\r\n\r\n    return (\r\n        <Form id=\"camundaForm\" onSubmit={onSubmit}>\r\n            {renderFormFields(formFields)}\r\n            <Button className=\"submitButton\" type=\"submit\" variant=\"outline-dark\" disabled={(!(shouldSubmit === undefined || shouldSubmit === null) ? false: shouldSubmit)}>Submit</Button>\r\n        </Form>\r\n    );\r\n\r\n\r\n    function renderFormFields(formFields) {\r\n        if (formFields !== undefined && formFields.length > 0) {\r\n            return formFields.map((field) => {\r\n\r\n                if (field.type.name === \"boolean\") {\r\n                    return (<div className=\"checkBoxField\">\r\n                        {field.label}\r\n                        <br />\r\n                        <input key={field.id} type=\"checkbox\" id={field.id} name={field.id} onChange={handleChange} defaultValue=\"false\" />\r\n                    </div>\r\n                    );\r\n                }\r\n                if (field.type.name.includes('multiEnum')) {\r\n                    return (\r\n                        <div className=\"selectDiv\">\r\n                            Choose\r\n                            <MultiSelect\r\n                                options={initializeOptions(field.type.values)}\r\n                                value={selected}\r\n                                onChange={setSelected}\r\n                                labelledBy={\"Select\"}\r\n                                className=\"multiSelect\"\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <Form.Group key={field.id} as={Col} className=\"singleInputField\">\r\n                            <Form.Label>{field.label}</Form.Label>\r\n                            <Form.Control type={field.type.name} id={field.id} name={field.id} onChange={handleChange} />\r\n                            {isValid.hasOwnProperty(`${field.id}`) &&\r\n                                showValidationErrors(field)\r\n                            }\r\n                        </Form.Group>\r\n                    );\r\n                }\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleChange(e) {\r\n        var temp = formFields;\r\n        temp.forEach(field => {\r\n            if (e.target.name === field.id) {\r\n                if (field.type.name === \"boolean\") {\r\n                    field.value.value = (field.value.value === true) ? false : true;\r\n                } else {\r\n                    field.value.value = e.target.value;\r\n                    if (!validate(field, field.value.value,setIsValid,isValid)) {\r\n                        setValidationMessage(`Input value for field ${field.id} should be`);\r\n                        if (Object.keys(isValid).length > 0) {\r\n                            setShouldSubmit(false);\r\n                        } else {\r\n                            setShouldSubmit(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setformFields(temp);\r\n    };\r\n\r\n    function showValidationErrors(field) {\r\n\r\n        if (isValid.hasOwnProperty(`${field.id}`)) {\r\n            return (\r\n                <div style={{ color: 'red' }}>\r\n                    {isValid[`${field.id}`]}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    function initializeOptions(fields) {\r\n        let options = [];\r\n        if (fields !== null && fields !== undefined) {\r\n            for (const [key, value] of Object.entries(fields)) {\r\n                options.push({ value: `${value}`, label: `${value}` })\r\n            }\r\n\r\n        }\r\n        return options;\r\n    }\r\n}\r\nexport default CamundaForm;\r\n\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js",[],"C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\Registration.js",["87","88","89","90","91","92","93","94"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport './RegistrationForm.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport {validate} from '../../functions/FormFunctions';\r\nimport BetaReader from './BetaReader';\r\n\r\nconst RegistrationForm = ({history}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [taskId, setTaskId] = React.useState('');\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/api/users/reg-task-user`,).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n                setTaskId(resp.data.taskId);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, []);\r\n\r\n\r\n    function SendRegisterRequest(e) {\r\n\r\n        e.preventDefault();   \r\n        const returnValue = [];\r\n        let dataIsValid = true;\r\n        formFields.forEach(field => {\r\n\r\n            validate(field,field.value.value,setIsValid,isValid);\r\n            if(Object.keys(isValid).length > 0){\r\n                setValidationMessage(`Input value for field ${field.id} should be`)\r\n                dataIsValid = false;\r\n                \r\n            }\r\n            field.value.value = (field.id === \"betaReader\" && field.value.value === null) ? false : field.value.value;\r\n            if(field.id === 'multiEnum_genres'){\r\n                field.value.value = selected;\r\n            }\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n        \r\n        \r\n        if(dataIsValid){\r\n            console.log('taskid',taskId);\r\n            console.log(returnValue);\r\n            axios.post(`${defaultUrl}/api/users/submit-general-data/${taskId}`, returnValue).then(\r\n            (resp) => {\r\n                console.log(resp);\r\n                if (resp.data !== \"\") {\r\n                    /*setformFields(resp.data.formFields);\r\n                    setTaskId(resp.data.taskId);\r\n                    setSelected([]);*/\r\n\r\n                    history.push({\r\n                        pathname: '/betaReader',\r\n                        state: {\r\n                          formFields: resp.data.formFields,\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                                       \r\n                }else{\r\n                    alert('We have sent you email with conformation link.')\r\n                }\r\n            },\r\n            (resp) => { alert(\"not registered\"); }\r\n        );\r\n    }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contentDiv\">\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>               \r\n                    <CamundaForm\r\n                    formFields={formFields}\r\n                    onSubmit={(e) => { SendRegisterRequest(e) }} \r\n                    shouldSubmit={shouldSubmit} \r\n                    setShouldSubmit={setShouldSubmit}\r\n                    setValidationMessage={setValidationMessage}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                    setformFields={setformFields}\r\n                    isValid={isValid}\r\n                    setIsValid={setIsValid}\r\n                    />              \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(RegistrationForm);\r\n\r\n","C:\\Users\\jelen\\Documents\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js",["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":3,"column":16,"nodeType":"103","messageId":"104","endLine":3,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":3,"column":28,"nodeType":"103","messageId":"104","endLine":3,"endColumn":34},{"ruleId":"101","severity":1,"message":"107","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":15,"column":21,"nodeType":"110","endLine":15,"endColumn":92},{"ruleId":"108","severity":1,"message":"109","line":18,"column":21,"nodeType":"110","endLine":18,"endColumn":92},{"ruleId":"108","severity":1,"message":"109","line":21,"column":21,"nodeType":"110","endLine":21,"endColumn":92},{"ruleId":"101","severity":1,"message":"111","line":8,"column":19,"nodeType":"103","messageId":"104","endLine":8,"endColumn":25},{"ruleId":"101","severity":1,"message":"112","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":15},{"ruleId":"101","severity":1,"message":"114","line":9,"column":7,"nodeType":"103","messageId":"104","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"115","line":165,"column":17,"nodeType":"103","messageId":"104","endLine":165,"endColumn":20},{"ruleId":"101","severity":1,"message":"112","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":15},{"ruleId":"101","severity":1,"message":"116","line":5,"column":17,"nodeType":"103","messageId":"104","endLine":5,"endColumn":36},{"ruleId":"101","severity":1,"message":"117","line":5,"column":38,"nodeType":"103","messageId":"104","endLine":5,"endColumn":48},{"ruleId":"101","severity":1,"message":"115","line":108,"column":25,"nodeType":"103","messageId":"104","endLine":108,"endColumn":28},{"ruleId":"101","severity":1,"message":"118","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":14},{"ruleId":"101","severity":1,"message":"111","line":4,"column":16,"nodeType":"103","messageId":"104","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"119","line":4,"column":24,"nodeType":"103","messageId":"104","endLine":4,"endColumn":33},{"ruleId":"101","severity":1,"message":"120","line":4,"column":35,"nodeType":"103","messageId":"104","endLine":4,"endColumn":46},{"ruleId":"101","severity":1,"message":"121","line":4,"column":48,"nodeType":"103","messageId":"104","endLine":4,"endColumn":60},{"ruleId":"101","severity":1,"message":"122","line":4,"column":62,"nodeType":"103","messageId":"104","endLine":4,"endColumn":65},{"ruleId":"101","severity":1,"message":"123","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"124","line":14,"column":12,"nodeType":"103","messageId":"104","endLine":14,"endColumn":29},{"ruleId":"101","severity":1,"message":"125","line":10,"column":12,"nodeType":"103","messageId":"104","endLine":10,"endColumn":18},{"ruleId":"101","severity":1,"message":"126","line":10,"column":20,"nodeType":"103","messageId":"104","endLine":10,"endColumn":29},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Switch' is defined but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'maintenance' is defined but never used.","'reading' is defined but never used.","'camundaForm' is assigned a value but never used.","'key' is assigned a value but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'Col' is defined but never used.","'BetaReader' is defined but never used.","'validationMessage' is assigned a value but never used.","'taskId' is assigned a value but never used.","'setTaskId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]