[{"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js":"1","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js":"2","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js":"4","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\UserFunctions.js":"5","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\Appbar.js":"6","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js":"7","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js":"8","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js":"9","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js":"10","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js":"11","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js":"12","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\LoggedInAppbar.js":"13","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\LoggOutAppbar.js":"14","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js":"15","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\Registration.js":"16","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js":"17","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\UploadPDF\\InitialUploadPage.js":"18","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\uploadPDF\\InitialUpload.js":"19"},{"size":517,"mtime":1607786319715,"results":"20","hashOfConfig":"21"},{"size":714,"mtime":1608985061182,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1607786319715,"results":"23","hashOfConfig":"21"},{"size":1464,"mtime":1609083157623,"results":"24","hashOfConfig":"21"},{"size":632,"mtime":1608985061196,"results":"25","hashOfConfig":"21"},{"size":1746,"mtime":1608985061187,"results":"26","hashOfConfig":"21"},{"size":1145,"mtime":1609073319884,"results":"27","hashOfConfig":"21"},{"size":1123,"mtime":1608985061192,"results":"28","hashOfConfig":"21"},{"size":461,"mtime":1609064098745,"results":"29","hashOfConfig":"21"},{"size":515,"mtime":1609084174345,"results":"30","hashOfConfig":"21"},{"size":50,"mtime":1607786319702,"results":"31","hashOfConfig":"21"},{"size":7275,"mtime":1609142029922,"results":"32","hashOfConfig":"21"},{"size":2622,"mtime":1608985061188,"results":"33","hashOfConfig":"21"},{"size":2964,"mtime":1609002498441,"results":"34","hashOfConfig":"21"},{"size":2896,"mtime":1608985061196,"results":"35","hashOfConfig":"21"},{"size":4104,"mtime":1609073319890,"results":"36","hashOfConfig":"21"},{"size":3083,"mtime":1609073319884,"results":"37","hashOfConfig":"21"},{"size":600,"mtime":1609083157640,"results":"38","hashOfConfig":"21"},{"size":2998,"mtime":1609085760291,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gef0zc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"42"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"42"},"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\index.js",[],["95","96"],"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\App.js",["97","98","99"],"import './App.css';\r\nimport Routes from './Routes.js';\r\nimport { Route, withRouter, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport getUser from './functions/UserFunctions';\r\nimport Appbar from './components/appbar/Appbar';\r\n\r\nconst App = () => {\r\n  const [loggedInUser, setLoggedIn] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    getUser(setLoggedIn);\r\n}, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Appbar loggedInUser = {loggedInUser} setLoggedIn= {setLoggedIn}/>\r\n        <Routes setLoggedIn= {setLoggedIn}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\Routes.js",["100"],"import React from 'react'\r\nimport {Route, withRouter, Switch } from \"react-router-dom\";\r\nimport Appbar from './components/appbar/Appbar';\r\nimport HomePage from './containers/HomePage/HomePage';\r\nimport LoginPage from './containers/LoginReg/LoginPage';\r\nimport RegistrationPage from './containers/LoginReg/RegistrationPage';\r\nimport BetaReader from './components/registration/BetaReader.js'\r\nimport InitialUploadPage from './containers/UploadPDF/InitialUploadPage.js'\r\n\r\nconst Routes = ({loggedInUser,setLoggedIn}) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' render={props =>\r\n                    <HomePage/>\r\n                } />\r\n            <Route exact path='/login' render={props =>\r\n                    <LoginPage setLoggedIn={setLoggedIn} />\r\n                } />\r\n            <Route exact path='/registration' render={props =>\r\n                    <RegistrationPage props={\"ReaderRegistration\"} />\r\n                } />\r\n            <Route exact path='/registration/writer' render={props =>\r\n                    <RegistrationPage props={\"WriterRegistration\"}/>\r\n                } />\r\n             <Route exact path='/betaReader' render={props =>\r\n                    <BetaReader/>\r\n                } />\r\n             <Route exact path=\"/upload/:id\" render={props =>\r\n                    <InitialUploadPage setLoggedIn={setLoggedIn}/>\r\n                } />\r\n        </Switch>\r\n        );\r\n}\r\n\r\nexport default withRouter(Routes);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\UserFunctions.js",["101"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../backendConfig';\r\n\r\nexport default function getUser(setLoggedIn) {\r\n    if (localStorage.getItem('token')) {\r\n        const options = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        };\r\n\r\n        axios.get(`${defaultUrl}/api/users/user`, options).then(\r\n            (resp) => {\r\n                setLoggedIn(resp.data);\r\n            },\r\n            (resp) => {\r\n                alert('error getting logged in user data');\r\n                setLoggedIn(undefined);\r\n            }\r\n        );\r\n    }\r\n}","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\Appbar.js",["102","103","104","105","106","107","108","109"],"import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport image from '../../icons/book.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button } from \"@material-ui/core\";\r\nimport './Appbar.css';\r\nimport LoggedInAppbar from \"./LoggedInAppbar\";\r\nimport LoggedOutAppbar from \"./LoggOutAppbar\";\r\n\r\nconst Appbar = ({loggedInUser,setLoggedIn}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          flexGrow: 0,\r\n          color:'gray',\r\n          cursor:'pointer',\r\n        },\r\n        toolbar: {\r\n            backgroundColor:'white',\r\n            boxShadow:0\r\n        },\r\n        divider:{\r\n            backgroundColor:'gray'\r\n        },\r\n        appbarButton:{\r\n            flexGrow:1,\r\n            color:'gray',\r\n            borderStyle: 'solid',\r\n            borderColor:'gray',\r\n            borderWidth:'0.5px',\r\n            marginTop:'3px',\r\n            borderRadius:'5px',\r\n            padding:'3px',\r\n            marginLeft:'7px',\r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n           <div>\r\n                { loggedInUser !== undefined &&\r\n                <LoggedInAppbar loggedInUser = {loggedInUser} setLoggedIn={setLoggedIn}/>\r\n                }\r\n                 { loggedInUser === undefined &&\r\n                <LoggedOutAppbar/>\r\n                }\r\n            </div>\r\n    );\r\n}\r\nexport default (Appbar);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\BetaReader.js",["110","111"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm';\r\nimport axios from 'axios';\r\nimport { defaultUrl } from '../../backendConfig.js';\r\n\r\nconst BetaReader = ({ history }) => {\r\n    \r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [taskId, setTaskId] = React.useState('');\r\n\r\n    return (\r\n        <div>\r\n            <CamundaForm\r\n                formFields={history.location.state.formFields}\r\n                onSubmit={(e) => { sendBetaGenres(e) }}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n            />\r\n        </div>\r\n    )\r\n\r\n\r\n    function sendBetaGenres(e) {\r\n\r\n        e.preventDefault();\r\n        const returnValue = [{ fieldId: 'betaGenres', fieldValue: selected }]\r\n    \r\n        axios.post(`${defaultUrl}/api/users/submit-beta-user/${history.location.state.taskId}`, returnValue).then(\r\n            (resp) => {\r\n                alert('super')\r\n            },\r\n            (resp) => { alert(\"not good\"); }\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(BetaReader);\r\n\r\n//{history.location.state.taskId}","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\HomePage\\HomePage.js",["112","113","114","115","116"],"import { Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Appbar from '../../components/appbar/Appbar';\r\nimport photo1 from '../../icons/photo1.svg';\r\nimport photo2 from '../../icons/photo2.svg';\r\nimport photo3 from '../../icons/photo3.svg';\r\n\r\nconst HomePage = ({loggedInUser,setLoggedIn}) => {\r\n    return (\r\n        <div>\r\n            {/* <Appbar loggedInUser={loggedInUser} setLoggedIn={setLoggedIn}/> */}\r\n            <Carousel style={{heigth:'30%',width:'40%',marginLeft:'30%',marginTop:'2%'}}>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo1} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo2} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img className=\"d-block w-100\"src={photo3} style={{height:'inherit'}}/>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage;","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\RegistrationPage.js",["117"],"import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport RegistrationForm from '../../components/registration/Registration'\r\n\r\nconst RegistrationPage = ({history, props}) => {\r\n    \r\n    React.useEffect(() => {\r\n        if(localStorage.length > 0){\r\n            history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    return(!localStorage.getItem('token') && <RegistrationForm type={props} />)\r\n}\r\nexport default withRouter(RegistrationPage);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\LoginReg\\LoginPage.js",["118","119"],"import React from 'react'\r\nimport LoginForm from '../../components/login/LoginForm';\r\nimport './LoginPage.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomePage from '../HomePage/HomePage';\r\n\r\n\r\nconst LoginPage = ({setLoggedIn,history}) => {\r\n\r\n    React.useEffect(() => {\r\n        if(localStorage.length > 0){\r\n            history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    return(!localStorage.getItem('token') && <LoginForm setLoggedIn={setLoggedIn}/>);\r\n\r\n}\r\nexport default withRouter(LoginPage);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\backendConfig.js",[],"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\CamundaForm.js",["120","121","122","123","124","125","126"],"\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport maintenance from '../icons/maintenance.svg';\r\nimport reading from '../icons/readingbook.svg';\r\nimport { React, useImperativeHandle, forwardRef } from 'react';\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport {validate} from '../functions/FormFunctions.js';\r\n\r\n\r\nconst CamundaForm = ({ formFields,\r\n    onSubmit,\r\n    shouldSubmit,\r\n    setShouldSubmit,\r\n    setValidationMessage,\r\n    selected,\r\n    setSelected,\r\n    isValid,\r\n    setIsValid,\r\n    uploadedFiles,\r\n    setUploadedFiles,\r\n    setformFields}) => {\r\n\r\n    return (\r\n        <Form id=\"camundaForm\" onSubmit={onSubmit}>\r\n            {renderFormFields(formFields)}\r\n            <Button className=\"submitButton\" type=\"submit\" variant=\"outline-dark\" disabled={(!(shouldSubmit === undefined || shouldSubmit === null) ? false: shouldSubmit)}>Submit</Button>\r\n        </Form>\r\n    );\r\n\r\n\r\n    function renderFormFields(formFields) {\r\n        if (formFields !== undefined && formFields.length > 0) {\r\n            return formFields.map((field) => {\r\n\r\n                if (field.type.name === \"boolean\") {\r\n                    return (<div className=\"checkBoxField\">\r\n                        {field.label}\r\n                        <br />\r\n                        <input key={field.id} type=\"checkbox\" id={field.id} name={field.id} onChange={handleChange} defaultValue=\"false\" />\r\n                    </div>\r\n                    );\r\n                }\r\n                if (field.type.name.includes('multiEnum')) {\r\n                    return (\r\n                        <div className=\"selectDiv\">\r\n                            Choose\r\n                            <MultiSelect\r\n                                options={initializeOptions(field.type.values)}\r\n                                value={selected}\r\n                                onChange={setSelected}\r\n                                labelledBy={\"Select\"}\r\n                                className=\"multiSelect\"\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n                if (field.type.name.includes('password')) {\r\n                    return (\r\n                        <Form.Group key={field.id} as={Col} className=\"singleInputField\">\r\n                            <Form.Label>{field.label}</Form.Label>\r\n                            <Form.Control type=\"password\" id={field.id} name={field.id} onChange={handleChange} />\r\n                            {isValid.hasOwnProperty(`${field.id}`) &&\r\n                                showValidationErrors(field)\r\n                            }\r\n                         </Form.Group>\r\n                    );\r\n                }\r\n                if (field.type.name.includes('email')) {\r\n                    return (\r\n                        <Form.Group key={field.id} as={Col} className=\"singleInputField\">\r\n                            <Form.Label>{field.label}</Form.Label>\r\n                            <Form.Control type=\"email\" id={field.id} name={field.id} onChange={handleChange} />\r\n                            {isValid.hasOwnProperty(`${field.id}`) &&\r\n                                showValidationErrors(field)\r\n                            }\r\n                         </Form.Group>\r\n                    );\r\n                }\r\n                if (field.type.name.includes('input_file')) {\r\n                    return (\r\n                        <Form.Group key={field.id} as={Col} className=\"singleInputField\">\r\n                            <Form.Label>{field.label}</Form.Label>\r\n                            <br/>\r\n                            <input multiple type=\"file\" id={field.id} name={field.id} onChange={fileSelectedHandler}/>\r\n                         </Form.Group>\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <Form.Group key={field.id} as={Col} className=\"singleInputField\">\r\n                            <Form.Label>{field.label}</Form.Label>\r\n                            <Form.Control type={field.type.name} id={field.id} name={field.id} onChange={handleChange} />\r\n                            {isValid.hasOwnProperty(`${field.id}`) &&\r\n                                showValidationErrors(field)\r\n                            }\r\n                        </Form.Group>\r\n                    );\r\n                }\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    function fileSelectedHandler(e) {\r\n        var field = formFields;\r\n\r\n        var fileBytes = [];\r\n        var fileNames = [];\r\n        var all = [];\r\n        var array = e.target.files;\r\n        var i;\r\n\r\n        for (i = 0; i < array.length; i++) {\r\n\r\n            var fileName = \"Filename\" + array[i].name;\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = (em) => {\r\n                all.push(em.target.result);\r\n                \r\n            }\r\n\r\n            all.push(fileName);\r\n\r\n            reader.readAsDataURL(e.target.files[i]);\r\n        }\r\n        console.log(fileBytes);\r\n\r\n        setUploadedFiles(fileBytes);\r\n        var temp = formFields;\r\n        temp.forEach(field => {\r\n            if (e.target.name === field.id) {\r\n                    field.value.value = all;\r\n            }\r\n        });\r\n        setformFields(temp);\r\n        setShouldSubmit(true);\r\n        // field.value = e.target.value;\r\n        // if (!validate(field, field.value, setIsValid, isValid)) {\r\n        //     setValidationMessage(`Input value for field ${field.id} should be`);\r\n        //     if (Object.keys(isValid).length > 0) {\r\n        //         setShouldSubmit(false);\r\n        //     } else {\r\n        //         setShouldSubmit(true);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    function handleChange(e) {\r\n        var temp = formFields;\r\n        temp.forEach(field => {\r\n            if (e.target.name === field.id) {\r\n                if (field.type.name === \"boolean\") {\r\n                    field.value.value = (field.value.value === true) ? false : true;\r\n                } else {\r\n                    field.value.value = e.target.value;\r\n                    if (!validate(field, field.value.value,setIsValid,isValid)) {\r\n                        setValidationMessage(`Input value for field ${field.id} should be`);\r\n                        if (Object.keys(isValid).length > 0) {\r\n                            setShouldSubmit(false);\r\n                        } else {\r\n                            setShouldSubmit(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setformFields(temp);\r\n    };\r\n\r\n    function showValidationErrors(field) {\r\n\r\n        if (isValid.hasOwnProperty(`${field.id}`)) {\r\n            return (\r\n                <div style={{ color: 'red' }}>\r\n                    {isValid[`${field.id}`]}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    function initializeOptions(fields) {\r\n        let options = [];\r\n        if (fields !== null && fields !== undefined) {\r\n            for (const [key, value] of Object.entries(fields)) {\r\n                options.push({ value: `${value}`, label: `${value}` })\r\n            }\r\n\r\n        }\r\n        return options;\r\n    }\r\n}\r\nexport default CamundaForm;\r\n\r\n\r\n","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\LoggedInAppbar.js",["127"],"import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport image from '../../icons/book.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button } from \"@material-ui/core\";\r\nimport './Appbar.css';\r\n\r\nconst LoggedInAppbar = ({history,loggedInUser,setLoggedIn}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          flexGrow: 0,\r\n          color:'gray',\r\n          cursor:'pointer',\r\n        },\r\n        toolbar: {\r\n            backgroundColor:'white',\r\n            boxShadow:0\r\n        },\r\n        divider:{\r\n            backgroundColor:'gray'\r\n        },\r\n        appbarButton:{\r\n            flexGrow:1,\r\n            color:'gray',\r\n            borderStyle: 'solid',\r\n            borderColor:'gray',\r\n            borderWidth:'0.5px',\r\n            marginTop:'3px',\r\n            borderRadius:'5px',\r\n            padding:'3px',\r\n            marginLeft:'7px',\r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n           <AppBar elevation={0} position=\"static\">\r\n            <Toolbar  className={classes.toolbar}>\r\n\r\n                <Typography variant=\"h6\" className={classes.title} onClick={() => { history.push(`/`);}}>\r\n                    <img alt=\"logo\" src={image} className=\"logo\" ></img>\r\n                    eBook\r\n                </Typography>\r\n                <div className=\"loggedInAppbarButtons\">\r\n                    \r\n                    <div className= {classes.appbarButton}\r\n                        //onClick={() => {history.push(`/login`);}}\r\n                    >Home</div>\r\n                    \r\n                    <div className={classes.appbarButton}\r\n                        //onClick={() => { history.push(`/registration`);}}\r\n                    >{loggedInUser.username}'s profile</div> \r\n\r\n                    <div className={classes.appbarButton}\r\n                        onClick={() => { \r\n                            localStorage.clear(); \r\n                            history.push('/')\r\n                            setLoggedIn(undefined)}}\r\n                    >Logout</div>                 \r\n                </div>\r\n            </Toolbar>\r\n            <Divider className={classes.divider}/>\r\n            </AppBar>\r\n    );\r\n}\r\nexport default withRouter(LoggedInAppbar);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\appbar\\LoggOutAppbar.js",["128"],"import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport image from '../../icons/book.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button } from \"@material-ui/core\";\r\nimport './Appbar.css';\r\n\r\nconst LoggedOutAppbar = ({history,loggedInUser}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 0,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          flexGrow: 0,\r\n          color:'gray',\r\n          cursor:'pointer',\r\n        },\r\n        toolbar: {\r\n            backgroundColor:'white',\r\n            boxShadow:0\r\n        },\r\n        divider:{\r\n            backgroundColor:'gray'\r\n        },\r\n        appbarButton:{\r\n            flexGrow:1,\r\n            color:'gray',\r\n            borderStyle: 'solid',\r\n            borderColor:'gray',\r\n            borderWidth:'0.5px',\r\n            marginTop:'3px',\r\n            borderRadius:'5px',\r\n            padding:'3px',\r\n            marginLeft:'7px',\r\n            cursor: 'pointer'\r\n        },\r\n        appbarButtonRegWriter: {\r\n            flexGrow:1,\r\n            color:'gray',\r\n            borderStyle: 'solid',\r\n            borderColor:'gray',\r\n            borderWidth:'0.5px',\r\n            marginTop:'3px',\r\n            borderRadius:'5px',\r\n            padding:'3px',\r\n            display: 'inline-block',\r\n            width: 'fit-content',\r\n            marginLeft:'7px',\r\n            marginRight: '10px',\r\n            cursor: 'pointer',\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n           <AppBar elevation={0} position=\"static\">\r\n            <Toolbar  className={classes.toolbar}>\r\n                <Typography variant=\"h6\" className={classes.title} onClick={() => { history.push(`/`);}}>\r\n                    <img alt=\"logo\" src={image} className=\"logo\" ></img>\r\n                    eBook\r\n                </Typography>\r\n                <div className=\"loginRegButtons\">\r\n                    \r\n                    <div className= {classes.appbarButton}\r\n                        onClick={() => {history.push(`/login`);}}\r\n                    >Login</div>\r\n                    \r\n                    <div className={classes.appbarButton}\r\n                        onClick={() => { history.push(`/registration`);}}\r\n                    >Register</div>\r\n                    <div className={classes.appbarButtonRegWriter}\r\n                        onClick={() => { history.push(`/registration/writer`);}}\r\n                    >Register as Writer</div>\r\n                   \r\n                </div>\r\n                \r\n            </Toolbar>\r\n            <Divider className={classes.divider}/>\r\n            </AppBar>\r\n    );\r\n}\r\nexport default withRouter(LoggedOutAppbar);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\functions\\FormFunctions.js",[],["129","130"],"C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\registration\\Registration.js",["131","132","133","134","135","136","137","138"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport './RegistrationForm.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport {validate} from '../../functions/FormFunctions';\r\nimport BetaReader from './BetaReader';\r\n\r\nconst RegistrationForm = ({history, type}) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected,setSelected] =  React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [taskId, setTaskId] = React.useState('');\r\n    const [shouldSubmit,setShouldSubmit] = React.useState(true);\r\n    console.log(type);\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/api/users/reg-task/${type}`,).then(\r\n            (resp) => {\r\n                setformFields(resp.data.formFields);\r\n                setTaskId(resp.data.taskId);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, [type]);\r\n\r\n\r\n    function SendRegisterRequest(e) {\r\n\r\n        e.preventDefault();   \r\n        const returnValue = [];\r\n        let dataIsValid = true;\r\n        formFields.forEach(field => {\r\n\r\n            validate(field,field.value.value,setIsValid,isValid);\r\n            if(Object.keys(isValid).length > 0){\r\n                setValidationMessage(`Input value for field ${field.id} should be`)\r\n                dataIsValid = false; \r\n            }\r\n\r\n            field.value.value = (field.id === \"betaReader\" && field.value.value === null) ? false : field.value.value;\r\n            \r\n            if(field.type.name.includes('multiEnum_genres')){\r\n                field.value.value = selected;\r\n            }\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n        \r\n        \r\n        if(dataIsValid){\r\n            console.log('taskid',taskId);\r\n            console.log(returnValue);\r\n           \r\n            var role = (type === \"WriterRegistration\") ? \"writer\" : \"reader\";\r\n            axios.post(`${defaultUrl}/api/users/submit-general-data/${taskId}/${role}`, returnValue).then(\r\n            (resp) => {\r\n                console.log(resp);\r\n                if (resp.data !== \"\") {\r\n                    /*setformFields(resp.data.formFields);\r\n                    setTaskId(resp.data.taskId);\r\n                    setSelected([]);*/\r\n\r\n                    history.push({\r\n                        pathname: '/betaReader',\r\n                        state: {\r\n                          formFields: resp.data.formFields,\r\n                          taskId: resp.data.taskId\r\n                        }\r\n                      });\r\n                                       \r\n                }else{\r\n                    alert('We have sent you email with conformation link.')\r\n                }\r\n            },\r\n            (resp) => { \r\n                alert(\"Validation failed,try again\"); \r\n            }\r\n        );\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contentDiv\">\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>               \r\n                    <CamundaForm\r\n                    formFields={formFields}\r\n                    onSubmit={(e) => { SendRegisterRequest(e) }} \r\n                    shouldSubmit={shouldSubmit} \r\n                    setShouldSubmit={setShouldSubmit}\r\n                    setValidationMessage={setValidationMessage}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                    setformFields={setformFields}\r\n                    isValid={isValid}\r\n                    setIsValid={setIsValid}\r\n                    />              \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(RegistrationForm);\r\n\r\n","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\login\\LoginForm.js",["139","140","141","142","143","144"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport getUser from '../../functions/UserFunctions.js';\r\nimport '../../containers/LoginReg/LoginPage.css';\r\n\r\nconst LoginForm = ({ history , setLoggedIn}) => {\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password,setPasword] = React.useState('');\r\n\r\n    function handleChange(evt) {\r\n        const value = evt.target.value;\r\n        /*etState({\r\n            ...state,\r\n            [evt.target.name]: value\r\n        });*/\r\n    }\r\n\r\n    const sendLoginRequest = (e) => {\r\n\r\n        e.preventDefault();\r\n        const fields = [];\r\n\r\n        const user = {username: username, password: password};\r\n\r\n        axios.post(`${defaultUrl}/api/users/login`,user).then(\r\n            (resp) => {               \r\n                alert('success');\r\n                localStorage.setItem('token', resp.data.accessToken);\r\n                history.push({pathname: '/'});\r\n                debugger;\r\n                getUser(setLoggedIn);\r\n        },\r\n            (resp) => {alert('wrong')}\r\n        );\r\n    }\r\n\r\n    return (     \r\n            <Card className=\"loginFormCard\">\r\n                <Card.Body>\r\n                    <Card.Title className=\"loginFormTitle\">Enter your creditentials</Card.Title>\r\n                    <Form onSubmit={(e) => { sendLoginRequest(e) }} className=\"loginForm\">\r\n\r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control \r\n                            id=\"username\" \r\n                            name=\"username\" \r\n                            onChange={(e) => {setUsername(e.target.value)}}\r\n                            required\r\n                            placeholder=\"Enter username\"\r\n                             />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            onChange={(e) => {setPasword(e.target.value)}}\r\n                            required\r\n                            placeholder=\"Enter password\"\r\n                             />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group  as={Col} className=\"loginFormInputField\">\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"loginButton\">\r\n                            Login\r\n                        </Button>\r\n                        </Form.Group>\r\n                            \r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n       \r\n    );\r\n}\r\nexport default withRouter(LoginForm);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\containers\\UploadPDF\\InitialUploadPage.js",["145","146"],"import React from 'react'\r\nimport InitialUpload from '../../components/uploadPDF/InitialUpload';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport HomePage from '../HomePage/HomePage';\r\n\r\n\r\nconst InitialUploadPage = ({setLoggedIn,history}) => {\r\n\r\n    let { id } = useParams();\r\n    console.log(id)\r\n\r\n    React.useEffect(() => {\r\n        if(localStorage.length > 0){\r\n            history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    return(!localStorage.getItem('token') && <InitialUpload setLoggedIn={setLoggedIn} processId={id}/>);\r\n\r\n}\r\nexport default withRouter(InitialUploadPage);","C:\\Users\\minam\\Desktop\\upp\\LiteralnoUdruzenje\\lu-frontend\\src\\components\\uploadPDF\\InitialUpload.js",["147","148","149","150","151","152","153","154","155"],"import React from 'react'\r\nimport { defaultUrl } from '../../backendConfig.js';\r\nimport axios from 'axios';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Card } from \"react-bootstrap\";\r\nimport './InitialUpload.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CamundaForm from '../CamundaForm.js';\r\nimport { validate } from '../../functions/FormFunctions';\r\n\r\nconst InitialUpload = ({ history, setLoggedIn, type, processId }) => {\r\n\r\n    const [formFields, setformFields] = React.useState([]);\r\n    const [validationMessage, setValidationMessage] = React.useState({});\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [isValid, setIsValid] = React.useState({});\r\n    const [taskId, setTaskId] = React.useState('');\r\n    const [shouldSubmit, setShouldSubmit] = React.useState(true);\r\n    const [uploadedFiles, setUploadedFiles] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${defaultUrl}/api/writers/upload-pdf-task/${processId}`,).then(\r\n            (resp) => {\r\n                console.log(resp.data.formFields);\r\n                setformFields(resp.data.formFields);\r\n                setTaskId(resp.data.taskId);\r\n            },\r\n            (resp) => { alert(\"error getting form fields,try again\"); }\r\n        );\r\n    }, [type]);\r\n\r\n\r\n    function SavePdfs(e) {\r\n\r\n        e.preventDefault();\r\n        const returnValue = [];\r\n        //let dataIsValid = true;\r\n        formFields.forEach(field => {\r\n            returnValue.push({ fieldId: field.id, fieldValue: field.value.value })\r\n        });\r\n\r\n\r\n        console.log('taskid', taskId);\r\n        console.log(returnValue);\r\n\r\n        axios.post(`${defaultUrl}/api/books/save-pdfs/${taskId}`, returnValue).then(\r\n            (resp) => {\r\n                alert('Your documents are uploaded successfully.')\r\n            },\r\n            (resp) => {\r\n                alert(\"Uploading failed, try again.\");\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contentDiv\">\r\n            <Card className=\"registrationCard\" id=\"registrationCard\">\r\n                <Card.Title></Card.Title>\r\n                <Card.Body>\r\n                    <CamundaForm\r\n                        formFields={formFields}\r\n                        onSubmit={(e) => { SavePdfs(e) }}\r\n                        shouldSubmit={shouldSubmit}\r\n                        setShouldSubmit={setShouldSubmit}\r\n                        setValidationMessage={setValidationMessage}\r\n                        selected={selected}\r\n                        setSelected={setSelected}\r\n                        setformFields={setformFields}\r\n                        isValid={isValid}\r\n                        setIsValid={setIsValid}\r\n                        uploadedFiles={uploadedFiles}\r\n                        setUploadedFiles={setUploadedFiles}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(InitialUpload);\r\n\r\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":15},{"ruleId":"160","severity":1,"message":"164","line":3,"column":17,"nodeType":"162","messageId":"163","endLine":3,"endColumn":27},{"ruleId":"160","severity":1,"message":"165","line":3,"column":29,"nodeType":"162","messageId":"163","endLine":3,"endColumn":35},{"ruleId":"160","severity":1,"message":"166","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"167","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"164","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":20},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"169","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":15},{"ruleId":"160","severity":1,"message":"170","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"171","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":17},{"ruleId":"160","severity":1,"message":"173","line":8,"column":19,"nodeType":"162","messageId":"163","endLine":8,"endColumn":25},{"ruleId":"160","severity":1,"message":"174","line":47,"column":11,"nodeType":"162","messageId":"163","endLine":47,"endColumn":18},{"ruleId":"160","severity":1,"message":"175","line":10,"column":12,"nodeType":"162","messageId":"163","endLine":10,"endColumn":18},{"ruleId":"160","severity":1,"message":"176","line":10,"column":20,"nodeType":"162","messageId":"163","endLine":10,"endColumn":29},{"ruleId":"160","severity":1,"message":"177","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":14},{"ruleId":"160","severity":1,"message":"166","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":15,"column":21,"nodeType":"180","endLine":15,"endColumn":92},{"ruleId":"178","severity":1,"message":"179","line":18,"column":21,"nodeType":"180","endLine":18,"endColumn":92},{"ruleId":"178","severity":1,"message":"179","line":21,"column":21,"nodeType":"180","endLine":21,"endColumn":92},{"ruleId":"181","severity":1,"message":"182","line":11,"column":8,"nodeType":"183","endLine":11,"endColumn":10,"suggestions":"184"},{"ruleId":"160","severity":1,"message":"185","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":14,"column":8,"nodeType":"183","endLine":14,"endColumn":10,"suggestions":"186"},{"ruleId":"160","severity":1,"message":"187","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":19},{"ruleId":"160","severity":1,"message":"188","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":15},{"ruleId":"160","severity":1,"message":"189","line":5,"column":17,"nodeType":"162","messageId":"163","endLine":5,"endColumn":36},{"ruleId":"160","severity":1,"message":"190","line":5,"column":38,"nodeType":"162","messageId":"163","endLine":5,"endColumn":48},{"ruleId":"160","severity":1,"message":"191","line":105,"column":13,"nodeType":"162","messageId":"163","endLine":105,"endColumn":18},{"ruleId":"160","severity":1,"message":"192","line":108,"column":13,"nodeType":"162","messageId":"163","endLine":108,"endColumn":22},{"ruleId":"160","severity":1,"message":"193","line":186,"column":25,"nodeType":"162","messageId":"163","endLine":186,"endColumn":28},{"ruleId":"160","severity":1,"message":"173","line":8,"column":19,"nodeType":"162","messageId":"163","endLine":8,"endColumn":25},{"ruleId":"160","severity":1,"message":"173","line":8,"column":19,"nodeType":"162","messageId":"163","endLine":8,"endColumn":25},{"ruleId":"156","replacedBy":"194"},{"ruleId":"158","replacedBy":"195"},{"ruleId":"160","severity":1,"message":"196","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},{"ruleId":"160","severity":1,"message":"173","line":4,"column":16,"nodeType":"162","messageId":"163","endLine":4,"endColumn":22},{"ruleId":"160","severity":1,"message":"197","line":4,"column":24,"nodeType":"162","messageId":"163","endLine":4,"endColumn":33},{"ruleId":"160","severity":1,"message":"198","line":4,"column":35,"nodeType":"162","messageId":"163","endLine":4,"endColumn":46},{"ruleId":"160","severity":1,"message":"199","line":4,"column":48,"nodeType":"162","messageId":"163","endLine":4,"endColumn":60},{"ruleId":"160","severity":1,"message":"200","line":4,"column":62,"nodeType":"162","messageId":"163","endLine":4,"endColumn":65},{"ruleId":"160","severity":1,"message":"201","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":18},{"ruleId":"160","severity":1,"message":"202","line":14,"column":12,"nodeType":"162","messageId":"163","endLine":14,"endColumn":29},{"ruleId":"160","severity":1,"message":"197","line":4,"column":24,"nodeType":"162","messageId":"163","endLine":4,"endColumn":33},{"ruleId":"160","severity":1,"message":"198","line":4,"column":35,"nodeType":"162","messageId":"163","endLine":4,"endColumn":46},{"ruleId":"160","severity":1,"message":"199","line":4,"column":48,"nodeType":"162","messageId":"163","endLine":4,"endColumn":60},{"ruleId":"160","severity":1,"message":"203","line":14,"column":14,"nodeType":"162","messageId":"163","endLine":14,"endColumn":26},{"ruleId":"160","severity":1,"message":"204","line":15,"column":15,"nodeType":"162","messageId":"163","endLine":15,"endColumn":20},{"ruleId":"160","severity":1,"message":"205","line":25,"column":15,"nodeType":"162","messageId":"163","endLine":25,"endColumn":21},{"ruleId":"160","severity":1,"message":"185","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":16,"column":8,"nodeType":"183","endLine":16,"endColumn":10,"suggestions":"206"},{"ruleId":"160","severity":1,"message":"196","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},{"ruleId":"160","severity":1,"message":"173","line":4,"column":16,"nodeType":"162","messageId":"163","endLine":4,"endColumn":22},{"ruleId":"160","severity":1,"message":"197","line":4,"column":24,"nodeType":"162","messageId":"163","endLine":4,"endColumn":33},{"ruleId":"160","severity":1,"message":"198","line":4,"column":35,"nodeType":"162","messageId":"163","endLine":4,"endColumn":46},{"ruleId":"160","severity":1,"message":"199","line":4,"column":48,"nodeType":"162","messageId":"163","endLine":4,"endColumn":60},{"ruleId":"160","severity":1,"message":"200","line":4,"column":62,"nodeType":"162","messageId":"163","endLine":4,"endColumn":65},{"ruleId":"160","severity":1,"message":"207","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":18},{"ruleId":"160","severity":1,"message":"202","line":13,"column":12,"nodeType":"162","messageId":"163","endLine":13,"endColumn":29},{"ruleId":"181","severity":1,"message":"208","line":29,"column":8,"nodeType":"183","endLine":29,"endColumn":14,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Switch' is defined but never used.","'Appbar' is defined but never used.","'React' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'image' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","'taskId' is assigned a value but never used.","'setTaskId' is assigned a value but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'HomePage' is defined but never used.",["213"],"'maintenance' is defined but never used.","'reading' is defined but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'field' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'key' is assigned a value but never used.",["210"],["211"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'Col' is defined but never used.","'BetaReader' is defined but never used.","'validationMessage' is assigned a value but never used.","'handleChange' is defined but never used.","'value' is assigned a value but never used.","'fields' is assigned a value but never used.",["214"],"'validate' is defined but never used.","React Hook React.useEffect has a missing dependency: 'processId'. Either include it or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"216","fix":"218"},{"desc":"216","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [history]",{"range":"222","text":"223"},{"range":"224","text":"223"},{"range":"225","text":"223"},"Update the dependencies array to be: [processId, type]",{"range":"226","text":"227"},[325,327],"[history]",[378,380],[436,438],[1302,1308],"[processId, type]"]
